{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "assignee": {
            "metadata": {
                "description": ""
            },
            "type": "object"
        },
        "assignor": {
            "metadata": {
                "description": ""
            },
            "type": "object"
        },
        "description": {
            "defaultValue": "",
            "metadata": {
                "description": ""
            },
            "type": "string"
        },
        "name": {
            "defaultValue": "",
            "metadata": {
                "description": ""
            },
            "type": "string"
        },
        "principalType": {
            "defaultValue": "ServicePrincipal",
            "metadata": {
                "description": ""
            },
            "type": "string"
        },
        "roleDefinitionGuid": {
            "defaultValue": "",
            "metadata": {
                "description": ""
            },
            "type": "string"
        },
        "roleDefinitionName": {
            "metadata": {
                "description": ""
            },
            "type": "string"
        }
    },
    "variables": {
        "assignorResourceId": "[resourceId(parameters('assignor').type, parameters('assignor').name)]",
        "supportedRoleDefinitionGuids": {
            "Key Vault Administrator": "00482a5a-887f-4fb3-b363-3b7fe8e74483",
            "Key Vault Certificates Officer": "a4417e6f-fecd-4de8-b567-7b0420556985",
            "Key Vault Crypto Officer": "14b46e9e-c2b7-41b4-b07b-48a6ebf60603",
            "Key Vault Crypto Service Encryption User": "e147488a-f6f5-4113-8e2d-b22465e65bf6",
            "Key Vault Crypto User": "12338af0-0e69-4776-bea7-57ae8d297424",
            "Key Vault Reader": "21090545-7ca7-4776-b22c-e363652d74d2",
            "Key Vault Secrets Officer": "b86a8fe4-44ce-4948-aee5-eccb2c155cd7",
            "Key Vault Secrets User": "4633458b-17de-408a-b874-0445c86b69e6"
        }
    },
    "resources": [
        {
            "apiVersion": "2022-04-01",
            "name": "[if(empty(parameters('name')), guid(createObject('assigneeId', if(empty(union(createObject('principalId', ''), parameters('assignee')).principalId), format('/subscriptions/{0}{1}{2}', union(createObject('subscriptionId', subscription().subscriptionId), parameters('assignee')).subscriptionId, format('/resourceGroups/{0}', union(createObject('resourceGroupName', resourceGroup().name), parameters('assignee')).resourceGroupName), format('/providers/{0}/{1}', parameters('assignee').type, parameters('assignee').name)), parameters('assignee').principalId)).assigneeId, createObject('roleDefinitionId', subscriptionResourceId('Microsoft.Authorization/roleDefinitions', if(empty(parameters('roleDefinitionGuid')), variables('supportedRoleDefinitionGuids')[parameters('roleDefinitionName')], parameters('roleDefinitionGuid')))).roleDefinitionId, variables('assignorResourceId')), parameters('name'))]",
            "properties": {
                "description": "[if(empty(parameters('description')), null(), parameters('description'))]",
                "principalId": "[if(empty(union(createObject('principalId', ''), parameters('assignee')).principalId), reference(format('/subscriptions/{0}{1}{2}', union(createObject('subscriptionId', subscription().subscriptionId), parameters('assignee')).subscriptionId, format('/resourceGroups/{0}', union(createObject('resourceGroupName', resourceGroup().name), parameters('assignee')).resourceGroupName), format('/providers/{0}/{1}{2}', parameters('assignee').type, parameters('assignee').name, if(equals('microsoft.managedidentity/userassignedidentities', toLower(parameters('assignee').type)), '', '/providers/Microsoft.ManagedIdentity/Identities/default'))), '2022-01-31-preview', 'full').properties.principalId, parameters('assignee').principalId)]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', if(empty(parameters('roleDefinitionGuid')), variables('supportedRoleDefinitionGuids')[parameters('roleDefinitionName')], parameters('roleDefinitionGuid')))]"
            },
            "scope": "[variables('assignorResourceId')]",
            "type": "Microsoft.Authorization/roleAssignments"
        }
    ]
}
