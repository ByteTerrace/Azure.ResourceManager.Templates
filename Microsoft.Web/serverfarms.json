{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "audit": {
            "defaultValue": {},
            "metadata": {
                "description": "An object that encapsulates the audit settings that will be applied to the Azure App Service Plan."
            },
            "type": "object"
        },
        "autoscale": {
            "defaultValue": {},
            "metadata": {
                "description": "An object that encapsulates the autoscale settings that will be applied to the Azure App Service Plan."
            },
            "type": "object"
        },
        "isPerSiteScalingEnabled": {
            "defaultValue": false,
            "metadata": {
                "description": "Indicates whether the feature that enables applications to scale independently is enabled on the Azure App Service Plan."
            },
            "type": "bool"
        },
        "location": {
            "metadata": {
                "description": "Specifies the location in which the Azure App Service Plan resource(s) should be deployed."
            },
            "type": "string"
        },
        "name": {
            "maxLength": 40,
            "metadata": {
                "description": "Specifies the name of the Azure App Service Plan."
            },
            "minLength": 1,
            "type": "string"
        },
        "operatingSystemName": {
            "allowedValues": [
                "Linux",
                "Windows"
            ],
            "defaultValue": "Linux",
            "metadata": {
                "description": "Specifies the name of operating system that the Azure App Service Plan will run within."
            },
            "type": "string"
        },
        "serviceEnvironment": {
            "defaultValue": {},
            "metadata": {
                "description": "An object that encapsulates the properties of the service environment that the Azure App Service Plan will be deployed within."
            },
            "type": "object"
        },
        "skuName": {
            "allowedValues": [
                "B1",
                "B2",
                "B3",
                "D1",
                "F1",
                "I1",
                "I2",
                "I3",
                "I1v2",
                "I2v2",
                "I3v2",
                "P1v2",
                "P1v3",
                "P2v2",
                "P2v3",
                "P3v2",
                "P3v3",
                "S1",
                "S2",
                "S3",
                "Y1"
            ],
            "defaultValue": "P1v3",
            "metadata": {
                "description": "Specifies the SKU name of the Azure App Service Plan."
            },
            "type": "string"
        },
        "tags": {
            "defaultValue": {},
            "metadata": {
                "description": "Specifies the set of tag key-value pairs that will be assigned to the Azure App Service Plan."
            },
            "type": "object"
        }
    },
    "variables": {
        "apiVersions": {
            "autoscaleSettings": "2015-04-01",
            "diagnosticSettings": "2017-05-01-preview",
            "serverFarms": "2020-09-01"
        },
        "audit": "[union(variables('defaultResourceProperties').audit, parameters('audit'))]",
        "autoscale": "[union(variables('defaultResourceProperties').autoscale, parameters('autoscale'))]",
        "defaultResourceProperties": {
            "audit": {
                "isEnabled": true,
                "logAnalyticsWorkspace": {
                    "name": "",
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                },
                "logNames": [
                    "AutoscaleEvaluations",
                    "AutoscaleScaleActions"
                ],
                "retentionPolicy": {
                    "days": 137,
                    "isEnabled": true
                }
            },
            "autoscale": {
                "isEnabled": false,
                "name": "[parameters('name')]",
                "notifications": [],
                "profiles": [
                    {
                        "capacity": {
                            "default": "1",
                            "maximum": "3",
                            "minimum": "1"
                        },
                        "name": "CPU usage exceeded maximum threshold.",
                        "rules": [
                            {
                                "metricTrigger": {
                                    "Dimensions": [],
                                    "dividePerInstance": false,
                                    "metricName": "CpuPercentage",
                                    "metricNamespace": "Microsoft.Web/serverfarms",
                                    "metricResourceUri": "[resourceId('Microsoft.Web/serverfarms', parameters('name'))]",
                                    "operator": "GreaterThan",
                                    "statistic": "Average",
                                    "threshold": 70,
                                    "timeAggregation": "Average",
                                    "timeGrain": "PT1M",
                                    "timeWindow": "PT5M"
                                },
                                "scaleAction": {
                                    "cooldown": "PT5M",
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1"
                                }
                            }
                        ]
                    }
                ]
            },
            "serviceEnvironment": {
                "name": "",
                "resourceGroupName": "[variables('resourceGroupName')]",
                "subscriptionId": "[variables('subscriptionId')]"
            }
        },
        "hostingEnvironmentProfile": {
            "id": "[resourceId(variables('serviceEnvironment').subscriptionId, variables('serviceEnvironment').resourceGroupName, 'Microsoft.Web/hostingEnvironments/', if(variables('isHostingEnvironmentEnabled'), variables('serviceEnvironment').name, 'dummyServiceEnvironment'))]"
        },
        "isAuditEnabled": "[variables('audit').isEnabled]",
        "isAuditLogAnalyticsWorkspaceNameNotEmpty": "[not(empty(variables('audit').logAnalyticsWorkspace.name))]",
        "isDockerSupportEnabled": false,
        "isHostingEnvironmentEnabled": "[not(empty(variables('serviceEnvironment').name))]",
        "isLinuxOperatingSystem": "[equals('linux', toLower(parameters('operatingSystemName')))]",
        "resourceGroupName": "[resourceGroup().name]",
        "resourceIds": {
            "auditLogAnalyticsWorkspace": "[resourceId(variables('audit').logAnalyticsWorkspace.subscriptionId, variables('audit').logAnalyticsWorkspace.resourceGroupName, 'Microsoft.OperationalInsights/workspaces', if(variables('isAuditLogAnalyticsWorkspaceNameNotEmpty'), variables('audit').logAnalyticsWorkspace.name, '<NULL>'))]",
            "autoscaleSettings": "[resourceId('Microsoft.Insights/autoscaleSettings', variables('autoscale').name)]",
            "serverfarm": "[resourceId('Microsoft.Web/serverfarms', parameters('name'))]"
        },
        "serviceEnvironment": "[union(variables('defaultResourceProperties').serviceEnvironment, parameters('serviceEnvironment'))]",
        "subscriptionId": "[subscription().subscriptionId]"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersions').serverFarms]",
            "kind": "[if(variables('isLinuxOperatingSystem'), 'linux', '')]",
            "location": "[parameters('location')]",
            "name": "[parameters('name')]",
            "properties": {
                "hostingEnvironmentProfile": "[if(variables('isHostingEnvironmentEnabled'), variables('hostingEnvironmentProfile'), null())]",
                "hyperV": "[and(variables('isDockerSupportEnabled'), not(variables('isLinuxOperatingSystem')))]",
                "perSiteScaling": "[parameters('isPerSiteScalingEnabled')]",
                "reserved": "[variables('isLinuxOperatingSystem')]"
            },
            "sku": {
                "name": "[parameters('skuName')]"
            },
            "tags": "[parameters('tags')]",
            "type": "Microsoft.Web/serverfarms"
        },
        {
            "apiVersion": "[variables('apiVersions').autoscaleSettings]",
            "dependsOn": [
                "[variables('resourceIds').serverfarm]"
            ],
            "location": "[parameters('location')]",
            "name": "[variables('autoscale').name]",
            "properties": {
                "copy": [
                    {
                        "count": "[length(variables('autoscale').notifications)]",
                        "input": {},
                        "name": "notifications"
                    },
                    {
                        "count": "[length(variables('autoscale').profiles)]",
                        "input": {
                            "capacity": "[variables('autoscale').profiles[copyIndex('profiles')].capacity]",
                            "name": "[variables('autoscale').profiles[copyIndex('profiles')].name]",
                            "rules": "[variables('autoscale').profiles[copyIndex('profiles')].rules]"
                        },
                        "name": "profiles"
                    }
                ],
                "enabled": "[variables('autoscale').isEnabled]",
                "predictiveAutoscalePolicy": {
                    "scaleLookAheadTime": "[null()]",
                    "scaleMode": "Disabled"
                },
                "targetResourceLocation": "[parameters('location')]",
                "targetResourceUri": "[variables('resourceIds').serverfarm]"
            },
            "tags": "[parameters('tags')]",
            "type": "Microsoft.Insights/autoscaleSettings"
        },
        {
            "apiVersion": "[variables('apiVersions').diagnosticSettings]",
            "condition": "[or(variables('isAuditEnabled'), variables('isAuditLogAnalyticsWorkspaceNameNotEmpty'))]",
            "dependsOn": [
                "[variables('resourceIds').autoscaleSettings]"
            ],
            "location": "[parameters('location')]",
            "name": "[format('{0}/Microsoft.Insights/audit', variables('autoscale').name)]",
            "properties": {
                "copy": [
                    {
                        "count": "[length(variables('audit').logNames)]",
                        "input": {
                            "category": "[variables('audit').logNames[copyIndex('logs')]]",
                            "enabled": "[variables('isAuditEnabled')]",
                            "retentionPolicy": {
                                "days": "[variables('audit').retentionPolicy.days]",
                                "enabled": "[variables('audit').retentionPolicy.isEnabled]"
                            }
                        },
                        "name": "logs"
                    }
                ],
                "workspaceId": "[variables('resourceIds').auditLogAnalyticsWorkspace]"
            },
            "type": "Microsoft.Insights/autoscaleSettings/providers/diagnosticsettings"
        }
    ]
}
