{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "audit": {
            "defaultValue": {},
            "metadata": {
                "description": "An object that encapsulates the audit settings that will be applied to the Azure Virtual Private Network Gateway."
            },
            "type": "object"
        },
        "borderGatewayProtocolConfiguration": {
            "defaultValue": {},
            "metadata": {
                "description": "An object that encapsulates the border gateway protocol (BGP) settings that will be applied to the Azure Virtual Private Network Gateway."
            },
            "type": "object"
        },
        "generation": {
            "allowedValues": [
                1,
                2
            ],
            "defaultValue": 2,
            "metadata": {
                "description": "Specifies the generaton of the Azure Virtual Private Network Gateway."
            },
            "type": "int"
        },
        "ipConfigurations": {
            "metadata": {
                "description": "An array of IP configurations that will be applied to the Azure Virtual Private Network Gateway."
            },
            "type": "array"
        },
        "isActiveActiveModeEnabled": {
            "defaultValue": false,
            "metadata": {
                "description": "Indicates whether active-active mode is enabled on the Azure Virtual Private Network Gateway."
            },
            "type": "bool"
        },
        "location": {
            "metadata": {
                "description": "Specifies the location in which the Azure Virtual Private Network Gateway resource(s) should be deployed."
            },
            "type": "string"
        },
        "mode": {
            "allowedValues": [
                "PolicyBased",
                "RouteBased"
            ],
            "defaultValue": "RouteBased",
            "metadata": {
                "description": "Specifies the mode of the Azure Virtual Private Network Gateway."
            },
            "type": "string"
        },
        "name": {
            "metadata": {
                "description": "Specifies the name of the Azure Virtual Private Network Gateway."
            },
            "type": "string"
        },
        "pointToSiteConfiguration": {
            "defaultValue": {},
            "metadata": {
                "description": "An object that encapsulates the point-to-site settings that will be applied to the Azure Virtual Private Network Gateway."
            },
            "type": "object"
        },
        "skuName": {
            "allowedValues": [
                "Basic",
                "VpnGw1",
                "VpnGw1AZ",
                "VpnGw2",
                "VpnGw2AZ",
                "VpnGw3",
                "VpnGw3AZ",
                "VpnGw4",
                "VpnGw4AZ",
                "VpnGw5",
                "VpnGw5AZ"
            ],
            "defaultValue": "VpnGw1AZ",
            "metadata": {
                "description": "Specifies the SKU name of the Azure Virtual Private Network Gateway."
            },
            "type": "string"
        },
        "tags": {
            "defaultValue": {},
            "metadata": {
                "description": "Specifies the set of tag key-value pairs that will be assigned to the Azure Virtual Private Network Gateway."
            },
            "type": "object"
        },
        "type": {
            "allowedValues": [
                "ExpressRoute",
                "Local",
                "Standard"
            ],
            "defaultValue": "Standard",
            "metadata": {
                "description": "Specifies the type of the Azure Virtual Private Network Gateway."
            },
            "type": "string"
        }
    },
    "variables": {
        "apiVersions": {
            "diagnosticSettings": "2017-05-01-preview",
            "virtualNetworkGateways": "2021-02-01"
        },
        "audit": "[union(variables('defaultResourceProperties').audit, parameters('audit'))]",
        "bgpConfiguration": {
            "asn": "[if(variables('isBorderGatewayProtocolEnabled'), parameters('borderGatewayProtocolConfiguration').asn, null())]"
        },
        "defaultResourceProperties": {
            "audit": {
                "isEnabled": true,
                "logAnalyticsWorkspace": {
                    "name": "",
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                },
                "logNames": [
                    "IKEDiagnosticLog",
                    "GatewayDiagnosticLog",
                    "P2SDiagnosticLog",
                    "RouteDiagnosticLog",
                    "TunnelDiagnosticLog"
                ],
                "retentionPolicy": {
                    "days": 137,
                    "isEnabled": true
                }
            },
            "ipConfiguration": {
                "privateIpAddress": {
                    "allocationMethod": "Dynamic"
                },
                "publicIpAddress": {
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                },
                "subnet": {
                    "name": "GatewaySubnet",
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                }
            },
            "pointToSiteConfiguration": {
                "addressPoolPrefixes": [
                    "192.168.254.0/24"
                ],
                "authenticationTypes": [
                    "AAD"
                ],
                "azureActiveDirectory": {
                    "audience": "[null()]",
                    "issuer": "[format('https://sts.windows.net/{0}/', variables('tenantId'))]",
                    "tenant": "[format('https://login.microsoftonline.com/{0}/', variables('tenantId'))]"
                },
                "clientProtocols": [
                    "OpenVPN"
                ],
                "radiusServers": []
            }
        },
        "isAuditEnabled": "[variables('audit').isEnabled]",
        "isAuditLogAnalyticsWorkspaceNameNotEmpty": "[not(empty(variables('audit').logAnalyticsWorkspace.name))]",
        "isBorderGatewayProtocolEnabled": "[not(empty(parameters('borderGatewayProtocolConfiguration')))]",
        "isPointToSiteEnabled": "[not(empty(parameters('pointToSiteConfiguration')))]",
        "resourceGroupName": "[resourceGroup().name]",
        "resourceIds": {
            "auditLogAnalyticsWorkspace": "[resourceId(variables('audit').logAnalyticsWorkspace.subscriptionId, variables('audit').logAnalyticsWorkspace.resourceGroupName, 'Microsoft.OperationalInsights/workspaces', if(variables('isAuditLogAnalyticsWorkspaceNameNotEmpty'), variables('audit').logAnalyticsWorkspace.name, '<NULL>'))]",
            "virtualNetworkGateways": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('name'))]"
        },
        "subscriptionId": "[subscription().subscriptionId]",
        "tenantId": "[subscription().tenantId]",
        "vpnClientConfiguration": {
            "aadAudience": "[union(variables('defaultResourceProperties').pointToSiteConfiguration, parameters('pointToSiteConfiguration')).azureActiveDirectory.audience]",
            "aadIssuer": "[union(variables('defaultResourceProperties').pointToSiteConfiguration, parameters('pointToSiteConfiguration')).azureActiveDirectory.issuer]",
            "aadTenant": "[union(variables('defaultResourceProperties').pointToSiteConfiguration, parameters('pointToSiteConfiguration')).azureActiveDirectory.tenant]",
            "copy": [
                {
                    "count": "[length(union(variables('defaultResourceProperties').pointToSiteConfiguration, parameters('pointToSiteConfiguration')).radiusServers)]",
                    "input": {
                        "radiusServerAddress": "[parameters('pointToSiteConfiguration').radiusServers[copyIndex('radiusServers')].address]",
                        "radiusServerSecret": "[parameters('pointToSiteConfiguration').radiusServers[copyIndex('radiusServers')].secret]"
                    },
                    "name": "radiusServers"
                }
            ],
            "vpnAuthenticationTypes": "[union(variables('defaultResourceProperties').pointToSiteConfiguration, parameters('pointToSiteConfiguration')).authenticationTypes]",
            "vpnClientAddressPool": {
                "addressPrefixes": "[union(variables('defaultResourceProperties').pointToSiteConfiguration, parameters('pointToSiteConfiguration')).addressPoolPrefixes]"
            },
            "vpnClientIpsecPolicies": [],
            "vpnClientProtocols": "[union(variables('defaultResourceProperties').pointToSiteConfiguration, parameters('pointToSiteConfiguration')).clientProtocols]",
            "vpnClientRevokedCertificates": [],
            "vpnClientRootCertificates": []
        }
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersions').virtualNetworkGateways]",
            "location": "[parameters('location')]",
            "name": "[parameters('name')]",
            "properties": {
                "activeActive": "[parameters('isActiveActiveModeEnabled')]",
                "bgpSettings": "[if(variables('isBorderGatewayProtocolEnabled'), variables('bgpConfiguration'), null())]",
                "copy": [
                    {
                        "count": "[length(parameters('ipConfigurations'))]",
                        "input": {
                            "name": "[parameters('ipConfigurations')[copyIndex('ipConfigurations')].name]",
                            "properties": {
                                "privateIPAllocationMethod": "[union(variables('defaultResourceProperties').ipConfiguration, parameters('ipConfigurations')[copyIndex('ipConfigurations')]).privateIpAddress.allocationMethod]",
                                "publicIPAddress": {
                                    "id": "[resourceId(union(variables('defaultResourceProperties').ipConfiguration.publicIpAddress, parameters('ipConfigurations')[copyIndex('ipConfigurations')].publicIpAddress).subscriptionId, union(variables('defaultResourceProperties').ipConfiguration.publicIpAddress, parameters('ipConfigurations')[copyIndex('ipConfigurations')].publicIpAddress).resourceGroupName, 'Microsoft.Network/publicIPAddresses', parameters('ipConfigurations')[copyIndex('ipConfigurations')].publicIpAddress.name)]"
                                },
                                "subnet": {
                                    "id": "[resourceId(union(variables('defaultResourceProperties').ipConfiguration.subnet, parameters('ipConfigurations')[copyIndex('ipConfigurations')].subnet).subscriptionId, union(variables('defaultResourceProperties').ipConfiguration.subnet, parameters('ipConfigurations')[copyIndex('ipConfigurations')].subnet).resourceGroupName, 'Microsoft.Network/virtualNetworks/subnets', parameters('ipConfigurations')[copyIndex('ipConfigurations')].subnet.virtualNetworkName, union(variables('defaultResourceProperties').ipConfiguration.subnet, parameters('ipConfigurations')[copyIndex('ipConfigurations')].subnet).name)]"
                                }
                            }
                        },
                        "name": "ipConfigurations"
                    },
                    {
                        "count": 0,
                        "input": "[null()]",
                        "name": "natRules"
                    }
                ],
                "customRoutes": {
                    "addressPrefixes": []
                },
                "enableBgp": "[variables('isBorderGatewayProtocolEnabled')]",
                "gatewayType": "[if(equals(toLower(parameters('type')), 'expressroute'), 'ExpressRoute', if(equals(toLower(parameters('type')), 'local'), 'LocalGateway', if(equals(toLower(parameters('type')), 'standard'), 'Vpn', null())))]",
                "sku": {
                    "name": "[parameters('skuName')]",
                    "tier": "[parameters('skuName')]"
                },
                "vpnClientConfiguration": "[if(variables('isPointToSiteEnabled'), variables('vpnClientConfiguration'), null())]",
                "vpnGatewayGeneration": "[concat('Generation', string(parameters('generation')))]",
                "vpnType": "[parameters('mode')]"
            },
            "tags": "[parameters('tags')]",
            "type": "Microsoft.Network/virtualNetworkGateways"
        },
        {
            "apiVersion": "[variables('apiVersions').diagnosticSettings]",
            "condition": "[or(variables('isAuditEnabled'), variables('isAuditLogAnalyticsWorkspaceNameNotEmpty'))]",
            "dependsOn": [
                "[variables('resourceIds').virtualNetworkGateways]"
            ],
            "location": "[parameters('location')]",
            "name": "[format('{0}/Microsoft.Insights/audit', parameters('name'))]",
            "properties": {
                "copy": [
                    {
                        "count": "[length(variables('audit').logNames)]",
                        "input": {
                            "category": "[variables('audit').logNames[copyIndex('logs')]]",
                            "enabled": "[variables('isAuditEnabled')]",
                            "retentionPolicy": {
                                "days": "[variables('audit').retentionPolicy.days]",
                                "enabled": "[variables('audit').retentionPolicy.isEnabled]"
                            }
                        },
                        "name": "logs"
                    }
                ],
                "workspaceId": "[variables('resourceIds').auditLogAnalyticsWorkspace]"
            },
            "type": "Microsoft.Network/virtualNetworkGateways/providers/diagnosticsettings"
        }
    ]
}
