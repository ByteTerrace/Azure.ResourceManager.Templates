{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "examples": [
            {
                "description": "Deploys a virtual network with the recommended set of properties for any environment.",
                "name": "Generic",
                "value": {
                    "addressPrefixes": [],
                    "dnsServers": [],
                    "name": "MyVirtualNetwork",
                    "subnets": []
                }
            }
        ]
    },
    "parameters": {
        "addressPrefixes": {
            "metadata": {
                "description": "An array of address prefixes, in CIDR notation, that should be reserved for the Azure Virtual Network."
            },
            "type": "array"
        },
        "ddosProtectionPlan": {
            "defaultValue": {},
            "metadata": {
                "description": "An object that encapsulates the DDOS protection plan settings that will be applied to the Azure Virtual Network."
            },
            "type": "object"
        },
        "dnsServers": {
            "defaultValue": [],
            "metadata": {
                "description": "An array of domain name servers that will be associated with the Azure Virtual Network."
            },
            "type": "array"
        },
        "location": {
            "metadata": {
                "description": "Specifies the location in which the Azure Virtual Network resource(s) should be deployed."
            },
            "type": "string"
        },
        "name": {
            "maxLength": 64,
            "metadata": {
                "description": "Specifies the name of the Azure Virtual Network."
            },
            "minLength": 2,
            "type": "string"
        },
        "subnets": {
            "defaultValue": [],
            "metadata": {
                "description": "An array of subnets that will be created within the Azure Virtual Network."
            },
            "type": "array"
        },
        "tags": {
            "defaultValue": {},
            "metadata": {
                "description": "Specifies the set of tag key-value pairs that will be assigned to the Azure Virtual Network."
            },
            "type": "object"
        }
    },
    "variables": {
        "apiVersions": {
            "virtualNetworks": "2021-05-01"
        },
        "defaultResourceProperties": {
            "ddosProtectionPlan": {
                "resourceGroupName": "[variables('resourceGroupName')]",
                "subscriptionId": "[variables('subscriptionId')]"
            },
            "subnet": {
                "delegations": [],
                "isPrivateEndpointSupportEnabled": false,
                "isPrivateLinkServiceSupportEnabled": false,
                "natGateway": {
                    "name": "",
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                },
                "networkSecurityGroup": {
                    "name": "",
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                },
                "routeTable": {
                    "name": "",
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                },
                "serviceEndpoints": []
            }
        },
        "isDdosProtectionEnabled": "[not(empty(parameters('ddosProtectionPlan')))]",
        "resourceGroupName": "[resourceGroup().name]",
        "subscriptionId": "[subscription().subscriptionId]"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersions').virtualNetworks]",
            "name": "[parameters('name')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[parameters('addressPrefixes')]"
                },
                "copy": [
                    {
                        "count": "[length(parameters('subnets'))]",
                        "input": {
                            "name": "[parameters('subnets')[copyIndex('subnets')].name]",
                            "properties": {
                                "addressPrefix": "[parameters('subnets')[copyIndex('subnets')].addressPrefix]",
                                "delegations": "[union(variables('defaultResourceProperties').subnet, parameters('subnets')[copyIndex('subnets')]).delegations]",
                                "natGateway": "[if(not(empty(union(variables('defaultResourceProperties').subnet, parameters('subnets')[copyIndex('subnets')]).natGateway.name)), createObject('id', resourceId(union(variables('defaultResourceProperties').subnet, parameters('subnets')[copyIndex('subnets')]).natGateway.subscriptionId, union(variables('defaultResourceProperties').subnet, parameters('subnets')[copyIndex('subnets')]).natGateway.resourceGroupName, 'Microsoft.Network/natGateways', union(variables('defaultResourceProperties').subnet, parameters('subnets')[copyIndex('subnets')]).natGateway.name)), null())]",
                                "networkSecurityGroup": "[if(not(empty(union(variables('defaultResourceProperties').subnet, parameters('subnets')[copyIndex('subnets')]).networkSecurityGroup.name)), createObject('id', resourceId(union(variables('defaultResourceProperties').subnet, parameters('subnets')[copyIndex('subnets')]).networkSecurityGroup.subscriptionId, union(variables('defaultResourceProperties').subnet, parameters('subnets')[copyIndex('subnets')]).networkSecurityGroup.resourceGroupName, 'Microsoft.Network/networkSecurityGroups', union(variables('defaultResourceProperties').subnet, parameters('subnets')[copyIndex('subnets')]).networkSecurityGroup.name)), null())]",
                                "privateEndpointNetworkPolicies": "[if(union(variables('defaultResourceProperties').subnet, parameters('subnets')[copyIndex('subnets')]).isPrivateEndpointSupportEnabled, 'Disabled', 'Enabled')]",
                                "privateLinkServiceNetworkPolicies": "[if(union(variables('defaultResourceProperties').subnet, parameters('subnets')[copyIndex('subnets')]).isPrivateLinkServiceSupportEnabled, 'Disabled', 'Enabled')]",
                                "routeTable": "[if(not(empty(union(variables('defaultResourceProperties').subnet, parameters('subnets')[copyIndex('subnets')]).routeTable.name)), createObject('id', resourceId(union(variables('defaultResourceProperties').subnet, parameters('subnets')[copyIndex('subnets')]).routeTable.subscriptionId, union(variables('defaultResourceProperties').subnet, parameters('subnets')[copyIndex('subnets')]).routeTable.resourceGroupName, 'Microsoft.Network/routeTables', union(variables('defaultResourceProperties').subnet, parameters('subnets')[copyIndex('subnets')]).routeTable.name)), null())]",
                                "serviceEndpoints": "[union(variables('defaultResourceProperties').subnet, parameters('subnets')[copyIndex('subnets')]).serviceEndpoints]"
                            }
                        },
                        "name": "subnets"
                    }
                ],
                "ddosProtectionPlan": "[if(variables('isDdosProtectionEnabled'), createObject('id', resourceId(union(variables('defaultResourceProperties').ddosProtectionPlan, parameters('ddosProtectionPlan')).subscriptionId, union(variables('defaultResourceProperties').ddosProtectionPlan, parameters('ddosProtectionPlan')).resourceGroupName, 'Microsoft.Network/ddosProtectionPlans', parameters('ddosProtectionPlan').name)), null())]",
                "dhcpOptions": "[if(empty(parameters('dnsServers')), null(), createObject('dnsServers', parameters('dnsServers')))]",
                "enableDdosProtection": "[variables('isDdosProtectionEnabled')]",
                "enableVmProtection": true
            },
            "tags": "[parameters('tags')]",
            "type": "Microsoft.Network/virtualNetworks"
        }
    ]
}
