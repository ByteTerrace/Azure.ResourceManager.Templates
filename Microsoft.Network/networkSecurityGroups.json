{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "audit": {
            "metadata": {
                "description": "An object that encapsulates the audit settings that will be applied to the Azure Network Security Group."
            },
            "type": "object"
        },
        "location": {
            "metadata": {
                "description": "Specifies the location in which the Azure Network Security Group resource(s) will be deployed."
            },
            "type": "string"
        },
        "name": {
            "maxLength": 80,
            "metadata": {
                "description": "Specifies the name of the Azure Network Security Group."
            },
            "minLength": 1,
            "type": "string"
        },
        "securityRules": {
            "defaultValue": [],
            "metadata": {
                "description": "An array of security rules that will be assigned to the Azure Network Security Group."
            },
            "type": "array"
        },
        "tags": {
            "defaultValue": {},
            "metadata": {
                "description": "Specifies the set of tag key-value pairs that will be assigned to the Azure Network Security Group."
            },
            "type": "object"
        }
    },
    "variables": {
        "apiVersions": {
            "deployments": "2021-04-01",
            "diagnosticSettings": "2017-05-01-preview",
            "networkSecurityGroups": "2020-07-01"
        },
        "audit": "[union(variables('defaultResourceProperties').audit, parameters('audit'))]",
        "defaultResourceProperties": {
            "audit": {
                "isEnabled": true,
                "logAnalyticsWorkspace": {
                    "name": "",
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                },
                "logNames": [
                    "NetworkSecurityGroupEvent",
                    "NetworkSecurityGroupRuleCounter"
                ],
                "retentionPolicy": {
                    "days": 137,
                    "isEnabled": true
                }
            },
            "securityRule": {
                "description": "",
                "sourcePortRanges": [ "*" ]
            }
        },
        "isAuditEnabled": "[variables('audit').isEnabled]",
        "isAuditLogAnalyticsWorkspaceNameNotEmpty": "[not(empty(variables('audit').logAnalyticsWorkspace.name))]",
        "resourceGroupName": "[resourceGroup().name]",
        "resourceIds": {
            "auditLogAnalyticsWorkspace": "[resourceId(variables('audit').logAnalyticsWorkspace.subscriptionId, variables('audit').logAnalyticsWorkspace.resourceGroupName, 'Microsoft.OperationalInsights/workspaces', if(variables('isAuditLogAnalyticsWorkspaceNameNotEmpty'), variables('audit').logAnalyticsWorkspace.name, '<NULL>'))]",
            "networkSecurityGroup": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('name'))]"
        },
        "subscriptionId": "[subscription().subscriptionId]"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersions').networkSecurityGroups]",
            "location": "[parameters('location')]",
            "name": "[parameters('name')]",
            "properties": {
                "copy": [
                    {
                        "count": "[length(parameters('securityRules'))]",
                        "input": {
                            "name": "[parameters('securityRules')[copyIndex('securityRules')].name]",
                            "properties": {
                                "access": "[parameters('securityRules')[copyIndex('securityRules')].access]",
                                "description": "[union(variables('defaultResourceProperties').securityRule, parameters('securityRules')[copyIndex('securityRules')]).description]",
                                "destinationAddressPrefix": "[if(equals(length(parameters('securityRules')[copyIndex('securityRules')].destinationAddressPrefixes), 1), parameters('securityRules')[copyIndex('securityRules')].destinationAddressPrefixes[0], null())]",
                                "destinationAddressPrefixes": "[if(greater(length(parameters('securityRules')[copyIndex('securityRules')].destinationAddressPrefixes), 1), parameters('securityRules')[copyIndex('securityRules')].destinationAddressPrefixes, createArray())]",
                                "destinationPortRange": "[if(equals(length(parameters('securityRules')[copyIndex('securityRules')].destinationPortRanges), 1), parameters('securityRules')[copyIndex('securityRules')].destinationPortRanges[0], null())]",
                                "destinationPortRanges": "[if(greater(length(parameters('securityRules')[copyIndex('securityRules')].destinationPortRanges), 1), parameters('securityRules')[copyIndex('securityRules')].destinationPortRanges, createArray())]",
                                "direction": "[parameters('securityRules')[copyIndex('securityRules')].direction]",
                                "priority": "[parameters('securityRules')[copyIndex('securityRules')].priority]",
                                "protocol": "[parameters('securityRules')[copyIndex('securityRules')].protocol]",
                                "sourceAddressPrefix": "[if(equals(length(parameters('securityRules')[copyIndex('securityRules')].sourceAddressPrefixes), 1), parameters('securityRules')[copyIndex('securityRules')].sourceAddressPrefixes[0], null())]",
                                "sourceAddressPrefixes": "[if(greater(length(parameters('securityRules')[copyIndex('securityRules')].sourceAddressPrefixes), 1), parameters('securityRules')[copyIndex('securityRules')].sourceAddressPrefixes, createArray())]",
                                "sourceApplicationSecurityGroups": [],
                                "sourcePortRange": "[if(equals(length(union(variables('defaultResourceProperties').securityRule, parameters('securityRules')[copyIndex('securityRules')]).sourcePortRanges), 1), union(variables('defaultResourceProperties').securityRule, parameters('securityRules')[copyIndex('securityRules')]).sourcePortRanges[0], null())]",
                                "sourcePortRanges": "[if(greater(length(union(variables('defaultResourceProperties').securityRule, parameters('securityRules')[copyIndex('securityRules')]).sourcePortRanges), 1), union(variables('defaultResourceProperties').securityRule, parameters('securityRules')[copyIndex('securityRules')]).sourcePortRanges, createArray())]"
                            }
                        },
                        "name": "securityRules"
                    }
                ]
            },
            "tags": "[parameters('tags')]",
            "type": "Microsoft.Network/networkSecurityGroups"
        },
        {
            "apiVersion": "[variables('apiVersions').diagnosticSettings]",
            "condition": "[or(variables('isAuditEnabled'), variables('isAuditLogAnalyticsWorkspaceNameNotEmpty'))]",
            "dependsOn": [
                "[variables('resourceIds').networkSecurityGroup]"
            ],
            "location": "[parameters('location')]",
            "name": "[format('{0}/Microsoft.Insights/audit', parameters('name'))]",
            "properties": {
                "copy": [
                    {
                        "count": "[length(variables('audit').logNames)]",
                        "input": {
                            "category": "[variables('audit').logNames[copyIndex('logs')]]",
                            "enabled": "[variables('isAuditEnabled')]",
                            "retentionPolicy": {
                                "days": "[variables('audit').retentionPolicy.days]",
                                "enabled": "[variables('audit').retentionPolicy.isEnabled]"
                            }
                        },
                        "name": "logs"
                    }
                ],
                "workspaceId": "[variables('resourceIds').auditLogAnalyticsWorkspace]"
            },
            "type": "Microsoft.Network/networkSecurityGroups/providers/diagnosticsettings"
        }
    ]
}
