{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "auditLogAnalyticsWorkspaceName": {
            "metadata": {
                "description": "Specifies the name of the Azure Log Analytics workspace that the Azure Network Security group audit feature will send its data to."
            },
            "type": "string"
        },
        "auditLogAnalyticsWorkspaceResourceGroupName": {
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Specifies the resource group name of the Azure Log Analytics workspace that the Azure Network Security group audit feature will send its data to."
            },
            "type": "string"
        },
        "auditLogAnalyticsWorkspaceSubscriptionId": {
            "defaultValue": "[subscription().subscriptionId]",
            "metadata": {
                "description": "Specifies the subscription id of the Azure Log Analytics workspace that the Azure Network Security group audit feature will send its data to."
            },
            "type": "string"
        },
        "flowLogStorageAccountName": {
            "metadata": {
                "description": "Specifies the name of the Azure Storage Account that the Azure Network Security flow log feature will send its data to."
            },
            "type": "string"
        },
        "flowLogStorageAccountResourceGroupName": {
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Specifies the resource group name of the Azure Storage Account that the Azure Network Security flow log feature will send its data to."
            },
            "type": "string"
        },
        "flowLogStorageAccountSubscriptionId": {
            "defaultValue": "[subscription().subscriptionId]",
            "metadata": {
                "description": "Specifies the subscription id of the Azure Storage Account that the Azure Network Security flow log feature will send its data to."
            },
            "type": "string"
        },
        "location": {
            "metadata": {
                "description": "Specifies the location in which the Azure Network Security group resource(s) will be deployed."
            },
            "type": "string"
        },
        "name": {
            "maxLength": 80,
            "metadata": {
                "description": "Specifies the name of the Azure Network Security group."
            },
            "minLength": 1,
            "type": "string"
        },
        "securityRules": {
            "defaultValue": [],
            "metadata": {
                "description": "An array of security rules that will be assigned to the Azure Network Security group."
            },
            "type": "array"
        },
        "tags": {
            "defaultValue": {},
            "metadata": {
                "description": "Specifies the set of tag key-value pairs that will be assigned to the Azure Network Security group."
            },
            "type": "object"
        }
    },
    "variables": {
        "apiVersions": {
            "deployments": "2021-04-01",
            "diagnosticSettings": "2017-05-01-preview",
            "logAnalyticsWorkspaces": "2020-08-01",
            "networkSecurityGroups": "2020-07-01",
            "networkWatchersFlowLogsApiVersion": "2020-07-01"
        },
        "defaultResourceProperties": {
            "securityRule": {
                "description": "",
                "sourcePortRanges": [ "*" ]
            }
        },
        "isAuditingEnabled": "[not(empty(parameters('auditLogAnalyticsWorkspaceName')))]",
        "isFlowLogEnabled": "[not(empty(parameters('flowLogStorageAccountName')))]",
        "resourceIds": {
            "auditLogAnalyticsWorkspace": "[resourceId(parameters('auditLogAnalyticsWorkspaceSubscriptionId'), parameters('auditLogAnalyticsWorkspaceResourceGroupName'), 'Microsoft.OperationalInsights/workspaces', parameters('auditLogAnalyticsWorkspaceName'))]",
            "flowLogStorageAccount": "[resourceId(parameters('flowLogStorageAccountSubscriptionId'), parameters('flowLogStorageAccountResourceGroupName'), 'Microsoft.Storage/storageAccounts', parameters('flowLogStorageAccountName'))]",
            "networkSecurityGroup": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('name'))]"
        }
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersions').networkSecurityGroups]",
            "location": "[parameters('location')]",
            "name": "[parameters('name')]",
            "properties": {
                "copy": [
                    {
                        "count": "[length(parameters('securityRules'))]",
                        "input": {
                            "name": "[parameters('securityRules')[copyIndex('securityRules')].name]",
                            "properties": {
                                "access": "[parameters('securityRules')[copyIndex('securityRules')].access]",
                                "description": "[union(variables('defaultResourceProperties').securityRule, parameters('securityRules')[copyIndex('securityRules')]).description]",
                                "destinationAddressPrefix": "[if(equals(length(parameters('securityRules')[copyIndex('securityRules')].destinationAddressPrefixes), 1), parameters('securityRules')[copyIndex('securityRules')].destinationAddressPrefixes[0], json('null'))]",
                                "destinationAddressPrefixes": "[if(greater(length(parameters('securityRules')[copyIndex('securityRules')].destinationAddressPrefixes), 1), parameters('securityRules')[copyIndex('securityRules')].destinationAddressPrefixes, createArray())]",
                                "destinationPortRange": "[if(equals(length(parameters('securityRules')[copyIndex('securityRules')].destinationPortRanges), 1), parameters('securityRules')[copyIndex('securityRules')].destinationPortRanges[0], json('null'))]",
                                "destinationPortRanges": "[if(greater(length(parameters('securityRules')[copyIndex('securityRules')].destinationPortRanges), 1), parameters('securityRules')[copyIndex('securityRules')].destinationPortRanges, createArray())]",
                                "direction": "[parameters('securityRules')[copyIndex('securityRules')].direction]",
                                "priority": "[parameters('securityRules')[copyIndex('securityRules')].priority]",
                                "protocol": "[parameters('securityRules')[copyIndex('securityRules')].protocol]",
                                "sourceAddressPrefix": "[if(equals(length(parameters('securityRules')[copyIndex('securityRules')].sourceAddressPrefixes), 1), parameters('securityRules')[copyIndex('securityRules')].sourceAddressPrefixes[0], json('null'))]",
                                "sourceAddressPrefixes": "[if(greater(length(parameters('securityRules')[copyIndex('securityRules')].sourceAddressPrefixes), 1), parameters('securityRules')[copyIndex('securityRules')].sourceAddressPrefixes, createArray())]",
                                "sourceApplicationSecurityGroups": [],
                                "sourcePortRange": "[if(equals(length(union(variables('defaultResourceProperties').securityRule, parameters('securityRules')[copyIndex('securityRules')]).sourcePortRanges), 1), union(variables('defaultResourceProperties').securityRule, parameters('securityRules')[copyIndex('securityRules')]).sourcePortRanges[0], json('null'))]",
                                "sourcePortRanges": "[if(greater(length(union(variables('defaultResourceProperties').securityRule, parameters('securityRules')[copyIndex('securityRules')]).sourcePortRanges), 1), union(variables('defaultResourceProperties').securityRule, parameters('securityRules')[copyIndex('securityRules')]).sourcePortRanges, createArray())]"
                            }
                        },
                        "name": "securityRules"
                    }
                ]
            },
            "tags": "[parameters('tags')]",
            "type": "Microsoft.Network/networkSecurityGroups"
        },
        {
            "apiVersion": "[variables('apiVersions').diagnosticSettings]",
            "dependsOn": [
                "[variables('resourceIds').networkSecurityGroup]"
            ],
            "location": "[parameters('location')]",
            "name": "[format('{0}/microsoft.insights/audit', parameters('name'))]",
            "properties": {
                "logs": [
                    {
                        "category": "NetworkSecurityGroupEvent",
                        "enabled": "[variables('isAuditingEnabled')]",
                        "retentionPolicy": {
                            "enabled": false,
                            "days": 0
                        }
                    },
                    {
                        "category": "NetworkSecurityGroupRuleCounter",
                        "enabled": "[variables('isAuditingEnabled')]",
                        "retentionPolicy": {
                            "enabled": false,
                            "days": 0
                        }
                    }
                ],
                "workspaceId": "[if(variables('isAuditingEnabled'), variables('resourceIds').auditLogAnalyticsWorkspace, json('null'))]"
            },
            "type": "Microsoft.Network/networkSecurityGroups/providers/diagnosticsettings"
        },
        {
            "apiVersion": "[variables('apiVersions').deployments]",
            "dependsOn": [
                "[variables('resourceIds').networkSecurityGroup]"
            ],
            "name": "[format('{0}-FlowLog', deployment().name)]",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "isEnabled": {
                        "value": "[variables('isFlowLogEnabled')]"
                    },
                    "logAnalyticsWorkspaceId": {
                        "value": "[if(variables('isAuditingEnabled'), variables('resourceIds').auditLogAnalyticsWorkspace, '')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "networkSecurityGroupId": {
                        "value": "[variables('resourceIds').networkSecurityGroup]"
                    },
                    "networkSecurityGroupName": {
                        "value": "[parameters('name')]"
                    },
                    "networkSecurityGroupResourceGroupName": {
                        "value": "[resourceGroup().name]"
                    },
                    "networkWatcherName": {
                        "value": "[format('Networkwatcher_{0}', toLower(replace(parameters('location'), ' ', '')))]"
                    },
                    "storageAccountId": {
                        "value": "[variables('resourceIds').flowLogStorageAccount]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "isEnabled": {
                            "type": "bool"
                        },
                        "logAnalyticsWorkspaceId": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "networkSecurityGroupId": {
                            "type": "string"
                        },
                        "networkSecurityGroupName": {
                            "type": "string"
                        },
                        "networkSecurityGroupResourceGroupName": {
                            "type": "string"
                        },
                        "networkWatcherName": {
                            "type": "string"
                        },
                        "storageAccountId": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "object"
                        }
                    },
                    "resources": [
                        {
                            "apiVersion": "2020-06-01",
                            "name": "[format('{0}/{1}-{2}-flowlog', parameters('networkWatcherName'), parameters('networkSecurityGroupName'), parameters('networkSecurityGroupResourceGroupName'))]",
                            "location": "[parameters('location')]",
                            "properties": {
                                "enabled": "[parameters('isEnabled')]",
                                "flowAnalyticsConfiguration": {
                                    "networkWatcherFlowAnalyticsConfiguration": {
                                        "enabled": "[not(empty(parameters('logAnalyticsWorkspaceId')))]",
                                        "trafficAnalyticsInterval": 60,
                                        "workspaceResourceId": "[parameters('logAnalyticsWorkspaceId')]"
                                    }
                                },
                                "format": {
                                    "type": "JSON",
                                    "version": "2"
                                },
                                "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                },
                                "storageId": "[parameters('storageAccountId')]",
                                "targetResourceId": "[parameters('networkSecurityGroupId')]"
                            },
                            "tags": "[parameters('tags')]",
                            "type": "Microsoft.Network/networkWatchers/flowLogs"
                        }
                    ]
                }
            },
            "resourceGroup": "NetworkWatcherRG",
            "subscriptionId": "[subscription().subscriptionId]",
            "type": "Microsoft.Resources/deployments"
        }
    ]
}
