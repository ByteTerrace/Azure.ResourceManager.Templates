{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "audit": {
            "defaultValue": {},
            "metadata": {
                "description": "An object that encapsulates the audit settings that will be applied to the Azure Logic App Workflow."
            },
            "type": "object"
        },
        "connections": {
            "defaultValue": {},
            "metadata": {
                "description": "An object that encapsulates the array of connections that will be created and made available to the Azure Logic App Workflow."
            },
            "type": "secureObject"
        },
        "identity": {
            "defaultValue": {},
            "metadata": {
                "description": "An object that encapsulates the properties of the identity that will be assigned to the Azure Logic App Workflow."
            },
            "type": "object"
        },
        "isEnabled": {
            "defaultValue": true,
            "metadata": {
                "description": "Indicates whether Azure Logic App Workflow is enabled."
            },
            "type": "bool"
        },
        "location": {
            "metadata": {
                "description": "Specifies the location in which the Azure Logic App Workflow resource(s) will be deployed."
            },
            "type": "string"
        },
        "name": {
            "maxLength": 80,
            "metadata": {
                "description": "Specifies the name of the Azure Logic App Workflow."
            },
            "minLength": 1,
            "type": "string"
        },
        "tags": {
            "defaultValue": {},
            "metadata": {
                "description": "Specifies the set of tag key-value pairs that will be assigned to the Azure Logic App Workflow."
            },
            "type": "object"
        }
    },
    "variables": {
        "apiVersions": {
            "diagnosticSettings": "2017-05-01-preview",
            "logicAppWorkflows": "2019-05-01",
            "webConnections": "2016-06-01"
        },
        "audit": "[union(variables('defaultResourceProperties').audit, parameters('audit'))]",
        "connectionsCollectionCount": "[length(union(variables('connectionsDefaultObject'), parameters('connections')).collection)]",
        "connectionsCollectionIsNotEmpty": "[greater(variables('connectionsCollectionCount'), 0)]",
        "connectionsDefaultObject": {
            "collection": []
        },
        "defaultResourceProperties": {
            "audit": {
                "isEnabled": true,
                "logAnalyticsWorkspace": {
                    "name": "",
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                },
                "logNames": [
                    "WorkflowRuntime"
                ],
                "retentionPolicy": {
                    "days": 137,
                    "isEnabled": true
                }
            },
            "connection": {
                "displayName": "",
                "parameters": {},
                "testLinks": []
            },
            "identity": {
                "isEnabled": true,
                "type": "[if(greater(variables('userAssignedIdentitiesCount'), 0), 'UserAssigned', 'SystemAssigned')]",
                "userAssignedIdentities": []
            }
        },
        "identity": "[union(variables('defaultResourceProperties').identity, parameters('identity'))]",
        "isAuditEnabled": "[variables('audit').isEnabled]",
        "isAuditLogAnalyticsWorkspaceNameNotEmpty": "[not(empty(variables('audit').logAnalyticsWorkspace.name))]",
        "resourceGroupName": "[resourceGroup().name]",
        "resourceIds": {
            "auditLogAnalyticsWorkspace": "[resourceId(variables('audit').logAnalyticsWorkspace.subscriptionId, variables('audit').logAnalyticsWorkspace.resourceGroupName, 'Microsoft.OperationalInsights/workspaces', if(variables('isAuditLogAnalyticsWorkspaceNameNotEmpty'), variables('audit').logAnalyticsWorkspace.name, '<NULL>'))]",
            "logicAppWorkflow": "[resourceId('Microsoft.Logic/workflows', parameters('name'))]"
        },
        "subscriptionId": "[subscription().subscriptionId]",
        "userAssignedIdentitiesCount": "[length(union(createObject('userAssignedIdentities', createArray()), parameters('identity')).userAssignedIdentities)]"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersions').webConnections]",
            "condition": "[variables('connectionsCollectionIsNotEmpty')]",
            "copy": {
                "count": "[variables('connectionsCollectionCount')]",
                "name": "connectionsCopy"
            },
            "location": "[parameters('location')]",
            "name": "[if(variables('connectionsCollectionIsNotEmpty'), parameters('connections').collection[copyIndex()].name, 'dummyConnection')]",
            "properties": {
                "api": {
                    "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), parameters('connections').collection[copyIndex()].type)]"
                },
                "displayName": "[if(empty(union(variables('defaultResourceProperties').connection, parameters('connections').collection[copyIndex()]).displayName), parameters('connections').collection[copyIndex()].name, parameters('connections').collection[copyIndex()].displayName)]",
                "parameterValues": "[union(variables('defaultResourceProperties').connection, parameters('connections').collection[copyIndex()]).parameters]",
                "testLinks": "[union(variables('defaultResourceProperties').connection, parameters('connections').collection[copyIndex()]).testLinks]"
            },
            "tags": "[parameters('tags')]",
            "type": "Microsoft.Web/connections"
        },
        {
            "apiVersion": "[variables('apiVersions').logicAppWorkflows]",
            "dependsOn": [
                "connectionsCopy"
            ],
            "identity": "[if(variables('identity').isEnabled, union(createObject('type', union(variables('defaultResourceProperties').identity, parameters('identity')).type), if(contains(variables('identity').type, 'UserAssigned'), createObject('userAssignedIdentities', createObject(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', first(variables('identity').userAssignedIdentities).name), createObject())), createObject())), null())]",
            "location": "[parameters('location')]",
            "name": "[parameters('name')]",
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "actions": {},
                    "outputs": {},
                    "parameters": {},
                    "triggers": {}
                },
                "parameters": {},
                "state": "[if(parameters('isEnabled'), 'Enabled', 'Disabled')]"
            },
            "tags": "[parameters('tags')]",
            "type": "Microsoft.Logic/workflows"
        },
        {
            "apiVersion": "[variables('apiVersions').diagnosticSettings]",
            "condition": "[or(variables('isAuditEnabled'), variables('isAuditLogAnalyticsWorkspaceNameNotEmpty'))]",
            "dependsOn": [
                "[variables('resourceIds').logicAppWorkflow]"
            ],
            "location": "[parameters('location')]",
            "name": "[format('{0}/Microsoft.Insights/audit', parameters('name'))]",
            "properties": {
                "copy": [
                    {
                        "count": "[length(variables('audit').logNames)]",
                        "input": {
                            "category": "[variables('audit').logNames[copyIndex('logs')]]",
                            "enabled": "[variables('isAuditEnabled')]",
                            "retentionPolicy": {
                                "days": "[variables('audit').retentionPolicy.days]",
                                "enabled": "[variables('audit').retentionPolicy.isEnabled]"
                            }
                        },
                        "name": "logs"
                    }
                ],
                "workspaceId": "[variables('resourceIds').auditLogAnalyticsWorkspace]"
            },
            "type": "Microsoft.Logic/workflows/providers/diagnosticsettings"
        }
    ]
}
