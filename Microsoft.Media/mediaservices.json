{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "audit": {
            "defaultValue": {},
            "metadata": {
                "description": "An object that encapsulates the audit settings that will be applied to the Azure Media Service."
            },
            "type": "object"
        },
        "location": {
            "metadata": {
                "description": "Specifies the location in which the Azure Media Service resource(s) will be deployed."
            },
            "type": "string"
        },
        "name": {
            "maxLength": 24,
            "metadata": {
                "description": "Specifies the name of the Azure Media Service."
            },
            "minLength": 3,
            "type": "string"
        },
        "storageAccounts": {
            "metadata": {
                "description": "An array of storage accounts that the Azure Media Service will use to operate."
            },
            "type": "array"
        },
        "tags": {
            "defaultValue": {},
            "metadata": {
                "description": "Specifies the set of tag key-value pairs that will be assigned to the Azure Media Service."
            },
            "type": "object"
        }
    },
    "variables": {
        "apiVersions": {
            "diagnosticSettings": "2017-05-01-preview",
            "mediaservices": "2020-05-01"
        },
        "audit": "[union(variables('defaultResourceProperties').audit, parameters('audit'))]",
        "defaultResourceProperties": {
            "audit": {
                "isEnabled": true,
                "logAnalyticsWorkspace": {
                    "name": "",
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                },
                "logNames": [
                    "KeyDeliveryRequests"
                ],
                "retentionPolicy": {
                    "days": 137,
                    "isEnabled": true
                }
            },
            "storageAccount": {
                "resourceGroupName": "[variables('resourceGroupName')]",
                "subscriptionId": "[variables('subscriptionId')]",
                "type": ""
            }
        },
        "isAuditEnabled": "[variables('audit').isEnabled]",
        "isAuditLogAnalyticsWorkspaceNameNotEmpty": "[not(empty(variables('audit').logAnalyticsWorkspace.name))]",
        "mediaServicesName": "[toLower(parameters('name'))]",
        "resourceGroupName": "[resourceGroup().name]",
        "resourceIds": {
            "auditLogAnalyticsWorkspace": "[resourceId(variables('audit').logAnalyticsWorkspace.subscriptionId, variables('audit').logAnalyticsWorkspace.resourceGroupName, 'Microsoft.OperationalInsights/workspaces', if(variables('isAuditLogAnalyticsWorkspaceNameNotEmpty'), variables('audit').logAnalyticsWorkspace.name, '<NULL>'))]",
            "mediaServices": "[resourceId('Microsoft.Media/mediaservices', variables('mediaServicesName'))]"
        },
        "subscriptionId": "[subscription().subscriptionId]"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersions').mediaservices]",
            "identity": {
                "type": "SystemAssigned"
            },
            "location": "[parameters('location')]",
            "name": "[variables('mediaServicesName')]",
            "properties": {
                "copy": [
                    {
                        "count": "[length(parameters('storageAccounts'))]",
                        "input": {
                            "id": "[resourceId(union(variables('defaultResourceProperties').storageAccount, parameters('storageAccounts')[copyIndex('storageAccounts')]).subscriptionId, union(variables('defaultResourceProperties').storageAccount, parameters('storageAccounts')[copyIndex('storageAccounts')]).resourceGroupName, 'Microsoft.Storage/storageAccounts', parameters('storageAccounts')[copyIndex('storageAccounts')].name)]",
                            "type": "[if(empty(union(variables('defaultResourceProperties').storageAccount, parameters('storageAccounts')[copyIndex('storageAccounts')]).type), if(equals(copyIndex('storageAccounts'), 0), 'Primary', 'Secondary'), parameters('storageAccounts')[copyIndex('storageAccounts')].type)]"
                        },
                        "name": "storageAccounts"
                    }
                ]
            },
            "tags": "[parameters('tags')]",
            "type": "Microsoft.Media/mediaservices"
        },
        {
            "apiVersion": "[variables('apiVersions').diagnosticSettings]",
            "condition": "[or(variables('isAuditEnabled'), variables('isAuditLogAnalyticsWorkspaceNameNotEmpty'))]",
            "dependsOn": [
                "[variables('resourceIds').mediaServices]"
            ],
            "location": "global",
            "name": "[format('{0}/Microsoft.Insights/audit', parameters('name'))]",
            "properties": {
                "copy": [
                    {
                        "count": "[length(variables('audit').logNames)]",
                        "input": {
                            "category": "[variables('audit').logNames[copyIndex('logs')]]",
                            "enabled": "[variables('isAuditEnabled')]",
                            "retentionPolicy": {
                                "days": "[variables('audit').retentionPolicy.days]",
                                "enabled": "[variables('audit').retentionPolicy.isEnabled]"
                            }
                        },
                        "name": "logs"
                    }
                ],
                "workspaceId": "[variables('resourceIds').auditLogAnalyticsWorkspace]"
            },
            "type": "Microsoft.Media/mediaservices/providers/diagnosticsettings"
        }
    ]
}
