{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "audit": {
            "defaultValue": {},
            "metadata": {
                "description": "An object that encapsulates the audit settings that will be applied to the Azure Recovery Services Vault."
            },
            "type": "object"
        },
        "backup": {
            "defaultValue": {},
            "metadata": {
                "description": "An object that encapsulates the backup settings that will be applied to the Azure Recovery Services Vault."
            },
            "type": "object"
        },
        "customerManagedEncryption": {
            "defaultValue": {},
            "metadata": {
                "description": "An object that encapsulates the customer-managed encryption settings that will be applied to the Azure Recovery Services Vault."
            },
            "type": "object"
        },
        "location": {
            "metadata": {
                "description": "Specifies the location in which the Azure Recovery Services Vault resource(s) should be deployed."
            },
            "type": "string"
        },
        "name": {
            "metadata": {
                "description": "Specifies the name of the Azure Recovery Services Vault."
            },
            "type": "string"
        },
        "tags": {
            "defaultValue": {},
            "metadata": {
                "description": "Specifies the set of tag key-value pairs that will be assigned to the Azure Recovery Services Vault."
            },
            "type": "object"
        }
    },
    "variables": {
        "apiVersions": {
            "deployments": "2021-04-01",
            "diagnosticSettings": "2017-05-01-preview",
            "keyVaults": "2019-09-01",
            "privateEndpoints": "2020-07-01",
            "privateEndpointsPrivateDnsZoneGroups": "2020-07-01",
            "recoveryServicesVaults": "2016-06-01",
            "resourceGroups": "2021-04-01",
            "roleAssignments": "2020-04-01-preview"
        },
        "audit": "[union(variables('defaultResourceProperties').audit, parameters('audit'))]",
        "backupPrivateEndpoints": "[union(variables('defaultResourceProperties').backup, parameters('backup')).privateEndpoints]",
        "backupPrivateEndpointsCount": "[length(variables('backupPrivateEndpoints'))]",
        "backupPrivateEndpointsIsNotEmpty": "[greater(variables('backupPrivateEndpointsCount'), 0)]",
        "copy": [
            {
                "count": "[variables('backupPrivateEndpointsCount')]",
                "input": {
                    "name": "[union(variables('defaultResourceProperties').privateEndpoint, variables('backupPrivateEndpoints')[copyIndex('privateEndpointResourceGroups')]).subnet.resourceGroupName]",
                    "subscriptionId": "[union(variables('defaultResourceProperties').privateEndpoint, variables('backupPrivateEndpoints')[copyIndex('privateEndpointResourceGroups')]).subnet.subscriptionId]"
                },
                "name": "privateEndpointResourceGroups"
            }
        ],
        "customerManagedEncryption": "[union(variables('defaultResourceProperties').customerManagedEncryption, parameters('customerManagedEncryption'))]",
        "defaultResourceProperties": {
            "audit": {
                "isEnabled": true,
                "logAnalyticsWorkspace": {
                    "name": "",
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                },
                "logNames": [
                    "AddonAzureBackupAlerts",
                    "AddonAzureBackupJobs",
                    "AddonAzureBackupPolicy",
                    "AddonAzureBackupProtectedInstance",
                    "AddonAzureBackupStorage",
                    "CoreAzureBackup"
                ],
                "retentionPolicy": {
                    "days": 137,
                    "isEnabled": true
                }
            },
            "backup": {
                "privateEndpoints": []
            },
            "customerManagedEncryption": {
                "isDoubleEncryptionAtRestEnabled": true,
                "keyName": "",
                "keyVault": {
                    "name": "",
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                },
                "keyVersion": ""
            },
            "privateEndpoint": {
                "dnsZone": {
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                },
                "subnet": {
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                }
            }
        },
        "isAuditEnabled": "[variables('audit').isEnabled]",
        "isAuditLogAnalyticsWorkspaceNameNotEmpty": "[not(empty(variables('audit').logAnalyticsWorkspace.name))]",
        "isCustomerManagedEncryptionEnabled": "[not(empty(variables('customerManagedEncryption').keyName))]",
        "resourceGroupName": "[resourceGroup().name]",
        "resourceGroups": "[union(variables('privateEndpointResourceGroups'), createArray())]",
        "resourceIds": {
            "auditLogAnalyticsWorkspace": "[resourceId(variables('audit').logAnalyticsWorkspace.subscriptionId, variables('audit').logAnalyticsWorkspace.resourceGroupName, 'Microsoft.OperationalInsights/workspaces', if(variables('isAuditLogAnalyticsWorkspaceNameNotEmpty'), variables('audit').logAnalyticsWorkspace.name, '<NULL>'))]",
            "contributorRoleDefinition": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
            "keyVaultCryptoServiceEncryptionUserRoleDefinition": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'e147488a-f6f5-4113-8e2d-b22465e65bf6')]",
            "recoveryServicesVault": "[resourceId('Microsoft.RecoveryServices/vaults', parameters('name'))]",
            "recoveryServicesVaultCustomerManagedEncryptionKeyVault": "[resourceId(variables('customerManagedEncryption').keyVault.subscriptionId, variables('customerManagedEncryption').keyVault.resourceGroupName, 'Microsoft.KeyVault/vaults', union(createObject('name', 'dummyKeyVault'), variables('customerManagedEncryption').keyVault).name)]"
        },
        "subscriptionId": "[subscription().subscriptionId]"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersions').recoveryServicesVaults]",
            "identity": {
                "type": "SystemAssigned"
            },
            "location": "[parameters('location')]",
            "name": "[parameters('name')]",
            "properties": {
                "encryption": "[if(variables('isCustomerManagedEncryptionEnabled'), createObject('infrastructureEncryption', if(variables('customerManagedEncryption').isDoubleEncryptionAtRestEnabled, 'Enabled', 'Disabled'), 'kekIdentity', createObject('useSystemAssignedIdentity', json('true')), 'keyVaultProperties', createObject('keyUri', format('{0}keys/{1}/{2}', reference(variables('resourceIds').recoveryServicesVaultCustomerManagedEncryptionKeyVault, variables('apiVersions').keyVaults).vaultUri, variables('customerManagedEncryption').keyName, variables('customerManagedEncryption').keyVersion))), null())]"
            },
            "sku": {
                "name": "RS0",
                "tier": "Standard"
            },
            "tags": "[parameters('tags')]",
            "type": "Microsoft.RecoveryServices/vaults"
        },
        {
            "apiVersion": "[variables('apiVersions').deployments]",
            "condition": "[variables('isCustomerManagedEncryptionEnabled')]",
            "dependsOn": [
                "[variables('resourceIds').recoveryServicesVault]"
            ],
            "name": "[format('{0}-KvRbac', deployment().name)]",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "keyVaultCryptoServiceEncryptionUserRoleDefinitionId": {
                        "value": "[variables('resourceIds').keyVaultCryptoServiceEncryptionUserRoleDefinition]"
                    },
                    "keyVaultName": {
                        "value": "[variables('customerManagedEncryption').keyVault.name]"
                    },
                    "keyVaultResourceId": {
                        "value": "[variables('resourceIds').recoveryServicesVaultCustomerManagedEncryptionKeyVault]"
                    },
                    "recoveryServicesVaultApiVersion": {
                        "value": "[variables('apiVersions').recoveryServicesVaults]"
                    },
                    "recoveryServicesVaultId": {
                        "value": "[variables('resourceIds').recoveryServicesVault]"
                    },
                    "roleAssignmentsApiVersion": {
                        "value": "[variables('apiVersions').roleAssignments]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "keyVaultCryptoServiceEncryptionUserRoleDefinitionId": {
                            "type": "string"
                        },
                        "keyVaultName": {
                            "type": "string"
                        },
                        "keyVaultResourceId": {
                            "type": "string"
                        },
                        "recoveryServicesVaultApiVersion": {
                            "type": "string"
                        },
                        "recoveryServicesVaultId": {
                            "type": "string"
                        },
                        "roleAssignmentsApiVersion":{
                            "type": "string"
                        }
                    },
                    "resources": [
                        {
                            "apiVersion": "[parameters('roleAssignmentsApiVersion')]",
                            "name": "[guid(parameters('recoveryServicesVaultId'), parameters('keyVaultCryptoServiceEncryptionUserRoleDefinitionId'), parameters('keyVaultResourceId'))]",
                            "properties": {
                                "principalId": "[reference(parameters('recoveryServicesVaultId'), parameters('recoveryServicesVaultApiVersion'), 'Full').identity.principalId]",
                                "roleDefinitionId": "[parameters('keyVaultCryptoServiceEncryptionUserRoleDefinitionId')]"
                            },
                            "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
                            "type": "Microsoft.Authorization/roleAssignments"
                        }
                    ]
                }
            },
            "resourceGroup": "[variables('customerManagedEncryption').keyVault.resourceGroupName]",
            "subscriptionId": "[variables('customerManagedEncryption').keyVault.subscriptionId]",
            "type": "Microsoft.Resources/deployments"
        },
        {
            "apiVersion": "[variables('apiVersions').deployments]",
            "condition": "[variables('backupPrivateEndpointsIsNotEmpty')]",
            "copy": {
                "count": "[variables('backupPrivateEndpointsCount')]",
                "mode": "Parallel",
                "name": "resourceGroupsRbacCopy"
            },
            "dependsOn": [
                "[variables('resourceIds').recoveryServicesVault]"
            ],
            "name": "[format('{0}-RgRbac_{1}', deployment().name, copyIndex())]",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "contributorRoleDefinitionId": {
                        "value": "[variables('resourceIds').contributorRoleDefinition]"
                    },
                    "resourceGroupId": {
                        "value": "[subscriptionResourceId(variables('resourceGroups')[copyIndex()].subscriptionId, 'Microsoft.Resources/resourceGroups', variables('resourceGroups')[copyIndex()].name)]"
                    },
                    "roleAssignmentsApiVersion": {
                        "value": "[variables('apiVersions').roleAssignments]"
                    },
                    "recoveryServicesVaultsApiVersion": {
                        "value": "[variables('apiVersions').recoveryServicesVaults]"
                    },
                    "recoveryServicesVaultId": {
                        "value": "[variables('resourceIds').recoveryServicesVault]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "contributorRoleDefinitionId": {
                            "type": "string"
                        },
                        "resourceGroupId": {
                            "type": "string"
                        },
                        "roleAssignmentsApiVersion":{
                            "type": "string"
                        },
                        "recoveryServicesVaultsApiVersion": {
                            "type": "string"
                        },
                        "recoveryServicesVaultId": {
                            "type": "string"
                        }
                    },
                    "resources": [
                        {
                            "apiVersion": "[parameters('roleAssignmentsApiVersion')]",
                            "name": "[guid(parameters('recoveryServicesVaultId'), parameters('contributorRoleDefinitionId'), parameters('resourceGroupId'))]",
                            "properties": {
                                "principalId": "[reference(parameters('recoveryServicesVaultId'), parameters('recoveryServicesVaultsApiVersion'), 'Full').identity.principalId]",
                                "roleDefinitionId": "[parameters('contributorRoleDefinitionId')]"
                            },
                            "type": "Microsoft.Authorization/roleAssignments"
                        }
                    ]
                }
            },
            "resourceGroup": "[if(variables('backupPrivateEndpointsIsNotEmpty'), variables('resourceGroups')[copyIndex()].name, variables('resourceGroupName'))]",
            "subscriptionId": "[if(variables('backupPrivateEndpointsIsNotEmpty'), variables('resourceGroups')[copyIndex()].subscriptionId, variables('subscriptionId'))]",
            "type": "Microsoft.Resources/deployments"
        },
        {
            "apiVersion": "[variables('apiVersions').privateEndpoints]",
            "condition": "[variables('backupPrivateEndpointsIsNotEmpty')]",
            "copy": {
                "count": "[variables('backupPrivateEndpointsCount')]",
                "mode": "Parallel",
                "name": "backupPrivateEndpointsCopy"
            },
            "dependsOn": [
                "resourceGroupsRbacCopy"
            ],
            "location": "[parameters('location')]",
            "name": "[if(variables('backupPrivateEndpointsIsNotEmpty'), variables('backupPrivateEndpoints'), createArray(createObject('name', 'dummyBackupPrivateEndpoint')))[copyIndex()].name]",
            "properties": {
                "customDnsConfigs": [],
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('backupPrivateEndpoints')[copyIndex()].name]",
                        "properties": {
                            "groupIds": [
                                "AzureBackup"
                            ],
                            "privateLinkServiceId": "[variables('resourceIds').recoveryServicesVault]"
                        }
                    }
                ],
                "subnet": {
                    "id": "[resourceId(union(variables('defaultResourceProperties').privateEndpoint, variables('backupPrivateEndpoints')[copyIndex()]).subnet.subscriptionId, union(variables('defaultResourceProperties').privateEndpoint, variables('backupPrivateEndpoints')[copyIndex()]).subnet.resourceGroupName, 'Microsoft.Network/virtualNetworks/subnets', variables('backupPrivateEndpoints')[copyIndex()].subnet.virtualNetworkName, variables('backupPrivateEndpoints')[copyIndex()].subnet.name)]"
                }
            },
            "tags": "[parameters('tags')]",
            "type": "Microsoft.Network/privateEndpoints"
        },
        {
            "apiVersion": "[variables('apiVersions').privateEndpointsPrivateDnsZoneGroups]",
            "condition": "[variables('backupPrivateEndpointsIsNotEmpty')]",
            "copy": {
                "count": "[variables('backupPrivateEndpointsCount')]",
                "mode": "Parallel",
                "name": "backupPrivateDnsZoneGroupsCopy"
            },
            "dependsOn": [
                "backupPrivateEndpointsCopy"
            ],
            "location": "[parameters('location')]",
            "name": "[format('{0}/default', if(variables('backupPrivateEndpointsIsNotEmpty'), variables('backupPrivateEndpoints'), createArray(createObject('name', 'dummyBlobServicesPrivateDnsZoneGroup')))[copyIndex()].name)]",
            "properties": {
                "copy": [
                    {
                        "count": "[length(union(variables('backupPrivateEndpoints'), createArray(createObject('dnsZones', createArray())))[copyIndex()].dnsZones)]",
                        "input": {
                            "name": "[replace(variables('backupPrivateEndpoints')[copyIndex()].dnsZones[copyIndex('privateDnsZoneConfigs')].name, '.', '-')]",
                            "properties": {
                                "privateDnsZoneId": "[resourceId(union(variables('defaultResourceProperties').privateEndpoint.dnsZone, variables('backupPrivateEndpoints')[copyIndex()].dnsZones[copyIndex('privateDnsZoneConfigs')]).subscriptionId, union(variables('defaultResourceProperties').privateEndpoint.dnsZone, variables('backupPrivateEndpoints')[copyIndex()].dnsZones[copyIndex('privateDnsZoneConfigs')]).resourceGroupName, 'Microsoft.Network/privateDnsZones', variables('backupPrivateEndpoints')[copyIndex()].dnsZones[copyIndex('privateDnsZoneConfigs')].name)]"
                            }
                        },
                        "name": "privateDnsZoneConfigs"
                    }
                ]
            },
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups"
        },
        {
            "apiVersion": "[variables('apiVersions').diagnosticSettings]",
            "condition": "[or(variables('isAuditEnabled'), variables('isAuditLogAnalyticsWorkspaceNameNotEmpty'))]",
            "dependsOn": [
                "[variables('resourceIds').recoveryServicesVault]"
            ],
            "location": "[parameters('location')]",
            "name": "[format('{0}/Microsoft.Insights/audit', parameters('name'))]",
            "properties": {
                "copy": [
                    {
                        "count": "[length(variables('audit').logNames)]",
                        "input": {
                            "category": "[variables('audit').logNames[copyIndex('logs')]]",
                            "enabled": "[variables('isAuditEnabled')]",
                            "retentionPolicy": {
                                "days": "[variables('audit').retentionPolicy.days]",
                                "enabled": "[variables('audit').retentionPolicy.isEnabled]"
                            }
                        },
                        "name": "logs"
                    }
                ],
                "workspaceId": "[variables('resourceIds').auditLogAnalyticsWorkspace]"
            },
            "type": "Microsoft.RecoveryServices/vaults/providers/diagnosticsettings"
        }
    ]
}
