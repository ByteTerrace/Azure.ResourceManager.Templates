{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "examples": [
            {
                "description": "Deploys an automation account with the recommended set of properties for a development environment.",
                "name": "Development",
                "value": {
                    "name": "MyAutomationAccount"
                }
            },
            {
                "description": "Deploys an automation account with the recommended set of properties for a production environment.",
                "name": "Production",
                "value": {
                    "desiredStateConfiguration": {
                        "privateEndpoints": [
                            {
                                "dnsZones": [
                                    {
                                        "name": "privatelink.azure-automation.net"
                                    }
                                ],
                                "name": "MyDesiredStateConfigurationPrivateEndpoint",
                                "subnet": {
                                    "name":"MySubnet",
                                    "virtualNetworkName": "MyVirtualNetwork"
                                }
                            }
                        ]
                    },
                    "name": "MyAutomationAccount",
                    "webWorker": {
                        "privateEndpoints": [
                            {
                                "dnsZones": [
                                    {
                                        "name": "privatelink.azure-automation.net"
                                    }
                                ],
                                "name": "MyWebWorkerPrivateEndpoint",
                                "subnet": {
                                    "name":"MySubnet",
                                    "virtualNetworkName": "MyVirtualNetwork"
                                }
                            }
                        ]
                    }
                }
            }
        ]
    },
    "parameters": {
        "desiredStateConfiguration": {
            "defaultValue": {},
            "type": "object"
        },
        "identity": {
            "defaultValue": {},
            "metadata": {
                "description": "An object that encapsulates the properties of the identity that will be assigned to the Azure Automation Account."
            },
            "type": "object"
        },
        "isPublicNetworkAccessEnabled": {
            "defaultValue": false,
            "metadata": {
                "description": "Indicates whether the Azure Automation Account is accessible from the internet."
            },
            "type": "bool"
        },
        "location": {
            "metadata": {
                "description": "Specifies the location in which the Azure Automation Account resource(s) should be deployed."
            },
            "type": "string"
        },
        "name": {
            "metadata": {
                "description": "Specifies the name of the Azure Automation Account."
            },
            "type": "string"
        },
        "tags": {
            "defaultValue": {},
            "metadata": {
                "description": "Specifies the set of tag key-value pairs that will be assigned to the Azure Automation Account."
            },
            "type": "object"
        },
        "webWorker": {
            "defaultValue": {},
            "type": "object"
        }
    },
    "variables": {
        "apiVersions": {
            "automationAccounts": "2021-04-01",
            "privateEndpoints": "2020-07-01",
            "privateEndpointsPrivateDnsZoneGroups": "2020-07-01"
        },
        "defaultResourceProperties": {
            "desiredStateConfiguration": {
                "privateEndpoints": []
            },
            "identity": {
                "isEnabled": true,
                "type": "[if(greater(variables('userAssignedIdentitiesCount'), 0), 'UserAssigned', 'SystemAssigned')]",
                "userAssignedIdentities": []
            },
            "privateEndpoint": {
                "dnsZone": {
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                },
                "location": "[parameters('location')]",
                "subnet": {
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                }
            },
            "webWorker": {
                "privateEndpoints": []
            }
        },
        "desiredStateConfigurationPrivateEndpoints": "[union(variables('defaultResourceProperties').desiredStateConfiguration, parameters('desiredStateConfiguration')).privateEndpoints]",
        "desiredStateConfigurationPrivateEndpointsCount": "[length(variables('desiredStateConfigurationPrivateEndpoints'))]",
        "desiredStateConfigurationPrivateEndpointsIsNotEmpty": "[greater(variables('desiredStateConfigurationPrivateEndpointsCount'), 0)]",
        "identity": "[union(variables('defaultResourceProperties').identity, parameters('identity'))]",
        "resourceGroupName": "[resourceGroup().name]",
        "resourceIds": {
            "automationAccount": "[resourceId('Microsoft.Automation/automationAccounts', parameters('name'))]"
        },
        "subscriptionId": "[subscription().subscriptionId]",
        "userAssignedIdentitiesCount": "[length(union(createObject('userAssignedIdentities', createArray()), parameters('identity')).userAssignedIdentities)]",
        "webWorkerPrivateEndpoints": "[union(variables('defaultResourceProperties').webWorker, parameters('webWorker')).privateEndpoints]",
        "webWorkerPrivateEndpointsCount": "[length(variables('webWorkerPrivateEndpoints'))]",
        "webWorkerPrivateEndpointsIsNotEmpty": "[greater(variables('webWorkerPrivateEndpointsCount'), 0)]"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersions').automationAccounts]",
            "identity": "[if(variables('identity').isEnabled, union(createObject('type', union(variables('defaultResourceProperties').identity, parameters('identity')).type), if(contains(variables('identity').type, 'UserAssigned'), createObject('userAssignedIdentities', createObject(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', first(variables('identity').userAssignedIdentities).name), createObject())), createObject())), null())]",
            "location": "[parameters('location')]",
            "name": "[parameters('name')]",
            "properties": {
                "encryption": {
                    "identity": "[null()]",
                    "keySource": "[if(true(), 'Microsoft.Automation', 'Microsoft.Keyvault')]"
                },
                "publicNetworkAccess": "[parameters('isPublicNetworkAccessEnabled')]",
                "sku": {
                    "name": "Basic"
                }
            },
            "tags": "[parameters('tags')]",
            "type": "Microsoft.Automation/automationAccounts"
        },
        {
            "apiVersion": "[variables('apiVersions').privateEndpoints]",
            "condition": "[variables('desiredStateConfigurationPrivateEndpointsIsNotEmpty')]",
            "copy": {
                "count": "[variables('desiredStateConfigurationPrivateEndpointsCount')]",
                "mode": "Parallel",
                "name": "desiredStateConfigurationPrivateEndpointsCopy"
            },
            "dependsOn": [
                "[variables('resourceIds').automationAccount]"
            ],
            "location": "[union(variables('defaultResourceProperties').privateEndpoint, variables('desiredStateConfigurationPrivateEndpoints')[copyIndex()]).location]",
            "name": "[variables('desiredStateConfigurationPrivateEndpoints')[copyIndex()].name]",
            "properties": {
                "customDnsConfigs": [],
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('desiredStateConfigurationPrivateEndpoints')[copyIndex()].name]",
                        "properties": {
                            "groupIds": [
                                "DSCAndHybridWorker"
                            ],
                            "privateLinkServiceId": "[variables('resourceIds').automationAccount]"
                        }
                    }
                ],
                "subnet": {
                    "id": "[resourceId(union(variables('defaultResourceProperties').privateEndpoint, variables('desiredStateConfigurationPrivateEndpoints')[copyIndex()]).subnet.subscriptionId, union(variables('defaultResourceProperties').privateEndpoint, variables('desiredStateConfigurationPrivateEndpoints')[copyIndex()]).subnet.resourceGroupName, 'Microsoft.Network/virtualNetworks/subnets', variables('desiredStateConfigurationPrivateEndpoints')[copyIndex()].subnet.virtualNetworkName, variables('desiredStateConfigurationPrivateEndpoints')[copyIndex()].subnet.name)]"
                }
            },
            "tags": "[parameters('tags')]",
            "type": "Microsoft.Network/privateEndpoints"
        },
        {
            "apiVersion": "[variables('apiVersions').privateEndpointsPrivateDnsZoneGroups]",
            "condition": "[variables('desiredStateConfigurationPrivateEndpointsIsNotEmpty')]",
            "copy": {
                "count": "[variables('desiredStateConfigurationPrivateEndpointsCount')]",
                "mode": "Parallel",
                "name": "desiredStateConfigurationPrivateDnsZoneGroupsCopy"
            },
            "dependsOn": [
                "desiredStateConfigurationPrivateEndpointsCopy"
            ],
            "location": "[union(variables('defaultResourceProperties').privateEndpoint, variables('desiredStateConfigurationPrivateEndpoints')[copyIndex()]).location]",
            "name": "[format('{0}/default', if(variables('desiredStateConfigurationPrivateEndpointsIsNotEmpty'), variables('desiredStateConfigurationPrivateEndpoints'), createArray(createObject('name', '<NULL>')))[copyIndex()].name)]",
            "properties": {
                "copy": [
                    {
                        "count": "[length(union(variables('desiredStateConfigurationPrivateEndpoints'), createArray(createObject('dnsZones', createArray())))[copyIndex()].dnsZones)]",
                        "input": {
                            "name": "[replace(variables('desiredStateConfigurationPrivateEndpoints')[copyIndex()].dnsZones[copyIndex('privateDnsZoneConfigs')].name, '.', '-')]",
                            "properties": {
                                "privateDnsZoneId": "[resourceId(union(variables('defaultResourceProperties').privateEndpoint.dnsZone, variables('desiredStateConfigurationPrivateEndpoints')[copyIndex()].dnsZones[copyIndex('privateDnsZoneConfigs')]).subscriptionId, union(variables('defaultResourceProperties').privateEndpoint.dnsZone, variables('desiredStateConfigurationPrivateEndpoints')[copyIndex()].dnsZones[copyIndex('privateDnsZoneConfigs')]).resourceGroupName, 'Microsoft.Network/privateDnsZones', variables('desiredStateConfigurationPrivateEndpoints')[copyIndex()].dnsZones[copyIndex('privateDnsZoneConfigs')].name)]"
                            }
                        },
                        "name": "privateDnsZoneConfigs"
                    }
                ]
            },
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups"
        },
        {
            "apiVersion": "[variables('apiVersions').privateEndpoints]",
            "condition": "[variables('webWorkerPrivateEndpointsIsNotEmpty')]",
            "copy": {
                "count": "[variables('webWorkerPrivateEndpointsCount')]",
                "mode": "Parallel",
                "name": "webWorkerPrivateEndpointsCopy"
            },
            "dependsOn": [
                "[variables('resourceIds').automationAccount]"
            ],
            "location": "[union(variables('defaultResourceProperties').privateEndpoint, variables('webWorkerPrivateEndpoints')[copyIndex()]).location]",
            "name": "[variables('webWorkerPrivateEndpoints')[copyIndex()].name]",
            "properties": {
                "customDnsConfigs": [],
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('webWorkerPrivateEndpoints')[copyIndex()].name]",
                        "properties": {
                            "groupIds": [
                                "Webhook"
                            ],
                            "privateLinkServiceId": "[variables('resourceIds').automationAccount]"
                        }
                    }
                ],
                "subnet": {
                    "id": "[resourceId(union(variables('defaultResourceProperties').privateEndpoint, variables('webWorkerPrivateEndpoints')[copyIndex()]).subnet.subscriptionId, union(variables('defaultResourceProperties').privateEndpoint, variables('webWorkerPrivateEndpoints')[copyIndex()]).subnet.resourceGroupName, 'Microsoft.Network/virtualNetworks/subnets', variables('webWorkerPrivateEndpoints')[copyIndex()].subnet.virtualNetworkName, variables('webWorkerPrivateEndpoints')[copyIndex()].subnet.name)]"
                }
            },
            "tags": "[parameters('tags')]",
            "type": "Microsoft.Network/privateEndpoints"
        },
        {
            "apiVersion": "[variables('apiVersions').privateEndpointsPrivateDnsZoneGroups]",
            "condition": "[variables('webWorkerPrivateEndpointsIsNotEmpty')]",
            "copy": {
                "count": "[variables('webWorkerPrivateEndpointsCount')]",
                "mode": "Parallel",
                "name": "webWorkerPrivateDnsZoneGroupsCopy"
            },
            "dependsOn": [
                "webWorkerPrivateEndpointsCopy"
            ],
            "location": "[union(variables('defaultResourceProperties').privateEndpoint, variables('webWorkerPrivateEndpoints')[copyIndex()]).location]",
            "name": "[format('{0}/default', if(variables('webWorkerPrivateEndpointsIsNotEmpty'), variables('webWorkerPrivateEndpoints'), createArray(createObject('name', '<NULL>')))[copyIndex()].name)]",
            "properties": {
                "copy": [
                    {
                        "count": "[length(union(variables('webWorkerPrivateEndpoints'), createArray(createObject('dnsZones', createArray())))[copyIndex()].dnsZones)]",
                        "input": {
                            "name": "[replace(variables('webWorkerPrivateEndpoints')[copyIndex()].dnsZones[copyIndex('privateDnsZoneConfigs')].name, '.', '-')]",
                            "properties": {
                                "privateDnsZoneId": "[resourceId(union(variables('defaultResourceProperties').privateEndpoint.dnsZone, variables('webWorkerPrivateEndpoints')[copyIndex()].dnsZones[copyIndex('privateDnsZoneConfigs')]).subscriptionId, union(variables('defaultResourceProperties').privateEndpoint.dnsZone, variables('webWorkerPrivateEndpoints')[copyIndex()].dnsZones[copyIndex('privateDnsZoneConfigs')]).resourceGroupName, 'Microsoft.Network/privateDnsZones', variables('webWorkerPrivateEndpoints')[copyIndex()].dnsZones[copyIndex('privateDnsZoneConfigs')].name)]"
                            }
                        },
                        "name": "privateDnsZoneConfigs"
                    }
                ]
            },
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups"
        }
    ]
}
