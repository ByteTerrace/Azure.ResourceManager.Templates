{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "firewallRules": {
            "defaultValue": [],
            "metadata": {
                "description": "An array of firewall rules that will be assigned to the Azure Container Registry."
            },
            "type": "array"
        },
        "isAdministratorAccountEnabled": {
            "defaultValue": false,
            "metadata": {
                "description": "Indicates whether the Azure Container Registry administrator user account is enabled."
            },
            "type": "bool"
        },
        "isPublicNetworkAccessEnabled": {
            "defaultValue": true,
            "metadata": {
                "description": "Indicates whether the Azure Container Registry is accessible from the internet."
            },
            "type": "bool"
        },
        "isTrustedMicrosoftResourceAccessEnabled": {
            "defaultValue": false,
            "metadata": {
                "description": "Indicates whether trusted Azure services and resources are allowed to access the Azure Container Registry."
            },
            "type": "bool"
        },
        "location": {
            "metadata": {
                "description": "Specifies the location in which the Azure Container Registry resource(s) should be deployed."
            },
            "type": "string"
        },
        "name": {
            "maxLength": 50,
            "metadata": {
                "description": "Specifies the name of the Azure Container Registry."
            },
            "minLength": 5,
            "type": "string"
        },
        "privateEndpoints": {
            "defaultValue": [],
            "metadata": {
                "description": "An array of private endpoints that will be linked with the Azure Container Registry."
            },
            "type": "array"
        },
        "skuName": {
            "allowedValues": [
                "Basic",
                "Premium",
                "Standard"
            ],
            "defaultValue": "Standard",
            "metadata": {
                "description": "Specifies the SKU name of the Azure Container Registry."
            },
            "type": "string"
        },
        "tags": {
            "defaultValue": {},
            "metadata": {
                "description": "Specifies the set of tag key-value pairs that will be assigned to the Azure Container Registry."
            },
            "type": "object"
        },
        "virtualNetworkRules": {
            "defaultValue": [],
            "metadata": {
                "description": "An array of virtual network rules that will be assigned to the Azure Container Registry."
            },
            "type": "array"
        }
    },
    "variables": {
        "apiVersions": {
            "containerRegistries": "2019-12-01-preview",
            "privateEndpoints": "2020-07-01",
            "privateEndpointsPrivateDnsZoneGroups": "2020-07-01"
        },
        "copy": [
            {
                "count": "[length(parameters('firewallRules'))]",
                "input": {
                    "action": "Allow",
                    "value": "[parameters('firewallRules')[copyIndex('ipRules')]]"
                },
                "name": "ipRules"
            },
            {
                "count": "[length(parameters('virtualNetworkRules'))]",
                "input": {
                    "action": "Allow",
                    "id": "[resourceId(union(variables('defaultResourceProperties').virtualNetworkRules, parameters('virtualNetworkRules')[copyIndex('virtualNetworkRules')]).subnet.resourceGroupName, 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkRules')[copyIndex('virtualNetworkRules')].subnet.virtualNetworkName, parameters('virtualNetworkRules')[copyIndex('virtualNetworkRules')].subnet.name)]"
                },
                "name": "virtualNetworkRules"
            }
        ],
        "containerRegistryResourceId": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]",
        "defaultResourceProperties": {
            "privateEndpoint": {
                "dnsZone": {
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                },
                "subnet": {
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                }
            },
            "virtualNetworkRules": {
                "subnet": {
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                }
            }
        },
        "firewallRulesIsNotEmpty": "[greater(length(parameters('firewallRules')), 0)]",
        "networkRuleSetProperties": {
            "defaultAction": "[if(or(variables('firewallRulesIsNotEmpty'), variables('virtualNetworkRulesIsNotEmpty')), 'Deny', 'Allow')]",
            "ipRules": "[variables('ipRules')]",
            "virtualNetworkRules": "[variables('virtualNetworkRules')]"
        },
        "privateEndpoints": "[if(variables('privateEndpointsIsNotEmpty'), parameters('privateEndpoints'), createArray(createObject('name', 'dummyEndpoint')))]",
        "privateEndpointsCount": "[length(parameters('privateEndpoints'))]",
        "privateEndpointsIsNotEmpty": "[greater(variables('privateEndpointsCount'), 0)]",
        "resourceGroupName": "[resourceGroup().name]",
        "subscriptionId": "[subscription().subscriptionId]",
        "virtualNetworkRulesIsNotEmpty": "[greater(length(parameters('virtualNetworkRules')), 0)]"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersions').containerRegistries]",
            "identity": {
                "type": "SystemAssigned"
            },
            "location": "[parameters('location')]",
            "name": "[parameters('name')]",
            "properties": {
                "adminUserEnabled": "[parameters('isAdministratorAccountEnabled')]",
                "networkRuleBypassOptions": "[if(parameters('isTrustedMicrosoftResourceAccessEnabled'), 'AzureServices', 'None')]",
                "networkRuleSet": "[if(equals(parameters('skuName'), 'Premium'), variables('networkRuleSetProperties'), json('null'))]",
                "publicNetworkAccess": "[if(parameters('isPublicNetworkAccessEnabled'), 'Enabled', 'Disabled')]",
                "zoneRedundancy": "Disabled"
            },
            "sku": {
                "name": "[parameters('skuName')]"
            },
            "tags": "[parameters('tags')]",
            "type": "Microsoft.ContainerRegistry/registries"
        },
        {
            "apiVersion": "[variables('apiVersions').privateEndpoints]",
            "condition": "[variables('privateEndpointsIsNotEmpty')]",
            "copy": {
                "count": "[variables('privateEndpointsCount')]",
                "mode": "Parallel",
                "name": "privateEndpointsCopy"
            },
            "dependsOn": [
                "[variables('containerRegistryResourceId')]"
            ],
            "location": "[parameters('location')]",
            "name": "[variables('privateEndpoints')[copyIndex()].name]",
            "properties": {
                "customDnsConfigs": [],
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('privateEndpoints')[copyIndex()].name]",
                        "properties": {
                            "groupIds": [
                                "registry"
                            ],
                            "privateLinkServiceId": "[variables('containerRegistryResourceId')]"
                        }
                    }
                ],
                "subnet": {
                    "id": "[resourceId(union(variables('defaultResourceProperties').privateEndpoint, variables('privateEndpoints')[copyIndex()]).subnet.subscriptionId, union(variables('defaultResourceProperties').privateEndpoint, variables('privateEndpoints')[copyIndex()]).subnet.resourceGroupName, 'Microsoft.Network/virtualNetworks/subnets', variables('privateEndpoints')[copyIndex()].subnet.virtualNetworkName, variables('privateEndpoints')[copyIndex()].subnet.name)]"
                }
            },
            "tags": "[parameters('tags')]",
            "type": "Microsoft.Network/privateEndpoints"
        },
        {
            "apiVersion": "[variables('apiVersions').privateEndpointsPrivateDnsZoneGroups]",
            "condition": "[variables('privateEndpointsIsNotEmpty')]",
            "copy": {
                "count": "[variables('privateEndpointsCount')]",
                "mode": "Parallel",
                "name": "privateDnsZoneGroupsCopy"
            },
            "dependsOn": [
                "privateEndpointsCopy"
            ],
            "location": "[parameters('location')]",
            "name": "[format('{0}/default', variables('privateEndpoints')[copyIndex()].name)]",
            "properties": {
                "copy": [
                    {
                        "count": "[length(variables('privateEndpoints')[copyIndex()].dnsZones)]",
                        "input": {
                            "name": "[replace(variables('privateEndpoints')[copyIndex()].dnsZones[copyIndex('privateDnsZoneConfigs')].name, '.', '-')]",
                            "properties": {
                                "privateDnsZoneId": "[resourceId(union(variables('defaultResourceProperties').privateEndpoint.dnsZone, variables('privateEndpoints')[copyIndex()].dnsZones[copyIndex('privateDnsZoneConfigs')]).subscriptionId, union(variables('defaultResourceProperties').privateEndpoint.dnsZone, variables('privateEndpoints')[copyIndex()].dnsZones[copyIndex('privateDnsZoneConfigs')]).resourceGroupName, 'Microsoft.Network/privateDnsZones', variables('privateEndpoints')[copyIndex()].dnsZones[copyIndex('privateDnsZoneConfigs')].name)]"
                            }
                        },
                        "name": "privateDnsZoneConfigs"
                    }
                ]
            },
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups"
        }
    ]
}
