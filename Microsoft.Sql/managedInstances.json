{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "audit": {
            "defaultValue": {},
            "metadata": {
                "description": "An object that encapsulates the audit settings that will be applied to the Azure Sql Managed Instance."
            },
            "type": "object"
        },
        "defaultCollation": {
            "defaultValue": "SQL_Latin1_General_CP1_CI_AS",
            "metadata": {
                "description": "Specifies the name of the default collation that will be used by Azure SQL Managed Instance."
            },
            "type": "string"
        },
        "identity": {
            "defaultValue": {},
            "metadata": {
                "description": "An object that encapsulates the properties of the identity that will be assigned to the Azure SQL Managed Instance."
            },
            "type": "object"
        },
        "isAzureHybridBenefitEnabled": {
            "defaultValue": false,
            "metadata": {
                "description": "Indicates whether the Azure Hybrid Benefit feature enabled on Azure Sql Managed Instance."
            },
            "type": "bool"
        },
        "location": {
            "metadata": {
                "description": "Specifies the location in which the Azure SQL Managed Instance resource(s) should be deployed."
            },
            "type": "string"
        },
        "name": {
            "metadata": {
                "description": "Specifies the name of the Azure SQL Managed Instance."
            },
            "type": "string"
        },
        "pool": {
            "defaultValue": {},
            "metadata": {
                "description": "An object that encapsulates the properties of the instance pool that the Azure SQL Managed Instance will be deployed within."
            },
            "type": "object"
        },
        "skuName": {
            "metadata": {
                "description": "Specifies the SKU name of the Azure Sql Managed Instance."
            },
            "type": "string"
        },
        "sqlAdministratorUserName": {
            "defaultValue": "[uniqueString(toLower(parameters('name')))]",
            "metadata": {
                "description": "Specifies the default SQL administrator user name that will be assigned to the Azure SQL Managed Instance."
            },
            "type": "securestring"
        },
        "sqlAdministratorUserPassword": {
            "defaultValue": "[base64(replace(format('{0}{1}', newGuid(), newGuid()), '-', ''))]",
            "metadata": {
                "description": "Specifies the default SQL administrator user password that will be assigned to the Azure SQL Managed Instance."
            },
            "type": "securestring"
        },
        "storageSizeInGigabytes": {
            "defaultValue": 512,
            "metadata": {
                "description": "Specifies the amount of storage space that will be made available to the Azure SQL Managed Instance, in gigabytes."
            },
            "type": "int"
        },
        "subnet": {
            "metadata": {
                "description": "An object that encapsulates the properties of the subnet that the Azure SQL Managed Instance will be deployed within."
            },
            "type": "object"
        },
        "tags": {
            "defaultValue": {},
            "metadata": {
                "description": "Specifies the set of tag key-value pairs that will be assigned to the Azure SQL Managed Instance."
            },
            "type": "object"
        },
        "timeZone": {
            "defaultValue": "UTC",
            "metadata": {
                "description": "Specifies the time zone of the Azure SQL Managed Instance."
            },
            "type": "string"
        }
    },
    "variables": {
        "apiVersions": {
            "diagnosticSettings": "2017-05-01-preview",
            "managedInstances": "2021-05-01-preview"
        },
        "audit": "[union(variables('defaultResourceProperties').audit, parameters('audit'))]",
        "copy": [
            {
                "count": "[variables('userAssignedIdentitiesCount')]",
                "input": "[resourceId(union(variables('defaultResourceProperties').userAssignedIdentity, variables('identity').userAssignedIdentities[copyIndex('userAssignedIdentitiesWithResourceId')]).subscriptionId, union(variables('defaultResourceProperties').userAssignedIdentity, variables('identity').userAssignedIdentities[copyIndex('userAssignedIdentitiesWithResourceId')]).resourceGroupName, 'Microsoft.ManagedIdentity/userAssignedIdentities', variables('identity').userAssignedIdentities[copyIndex('userAssignedIdentitiesWithResourceId')].name)]",
                "name": "userAssignedIdentitiesWithResourceId"
            }
        ],
        "defaultResourceProperties": {
            "audit": {
                "isEnabled": false,
                "logAnalyticsWorkspace": {
                    "name": "",
                    "resourceGroupName": "[variables('resourceGroupName')]",
                    "subscriptionId": "[variables('subscriptionId')]"
                },
                "logNames": [],
                "retentionPolicy": {
                    "days": 137,
                    "isEnabled": true
                }
            },
            "identity": {
                "isEnabled": true,
                "type": "[if(greater(variables('userAssignedIdentitiesCount'), 0), 'UserAssigned', 'SystemAssigned')]",
                "userAssignedIdentities": []
            },
            "pool": {
                "resourceGroupName": "[variables('resourceGroupName')]",
                "subscriptionId": "[variables('subscriptionId')]"
            },
            "subnet": {
                "resourceGroupName": "[variables('resourceGroupName')]",
                "subscriptionId": "[variables('subscriptionId')]"
            },
            "userAssignedIdentity": {
                "resourceGroupName": "[variables('resourceGroupName')]",
                "subscriptionId": "[variables('subscriptionId')]"
            }
        },
        "identity": "[union(variables('defaultResourceProperties').identity, parameters('identity'))]",
        "isAuditEnabled": "[variables('audit').isEnabled]",
        "isAuditLogAnalyticsWorkspaceNameNotEmpty": "[not(empty(variables('audit').logAnalyticsWorkspace.name))]",
        "resourceGroupName": "[resourceGroup().name]",
        "resourceIds": {
            "auditLogAnalyticsWorkspace": "[resourceId(variables('audit').logAnalyticsWorkspace.subscriptionId, variables('audit').logAnalyticsWorkspace.resourceGroupName, 'Microsoft.OperationalInsights/workspaces', if(variables('isAuditLogAnalyticsWorkspaceNameNotEmpty'), variables('audit').logAnalyticsWorkspace.name, '<NULL>'))]",
            "managedInstance": "[resourceId('Microsoft.Sql/managedInstances', parameters('name'))]"
        },
        "subscriptionId": "[subscription().subscriptionId]",
        "userAssignedIdentitiesCount": "[length(union(createObject('userAssignedIdentities', createArray()), parameters('identity')).userAssignedIdentities)]"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersions').managedInstances]",
            "name": "[parameters('name')]",
            "location": "[parameters('location')]",
            "identity": "[if(variables('identity').isEnabled, union(createObject('type', union(variables('defaultResourceProperties').identity, parameters('identity')).type), if(contains(variables('identity').type, 'UserAssigned'), createObject('userAssignedIdentities', json(replace(replace(replace(string(variables('userAssignedIdentitiesWithResourceId')), ',', ':{},'), '[', '{'), ']', ':{}}'))), createObject())), null())]",
            "properties": {
                "administratorLogin": "[parameters('sqlAdministratorUserName')]",
                "administratorLoginPassword": "[parameters('sqlAdministratorUserPassword')]",
                "collation": "[parameters('defaultCollation')]",
                "instancePoolId": "[if(empty(parameters('pool')), null(), resourceId(union(variables('defaultResourceProperties').pool, parameters('pool')).subscriptionId, union(variables('defaultResourceProperties').pool, parameters('pool')).resourceGroupName, 'Microsoft.Sql/instancePools', parameters('pool').name))]",
                "licenseType": "[if(parameters('isAzureHybridBenefitEnabled'), 'BasePrice', 'LicenseIncluded')]",
                "managedInstanceCreataeMode": "Default",
                "minimalTlsVersion": "1.2",
                "publicDataEndpointEnabled": true,
                "storageSizeInGB": "[parameters('storageSizeInGigabytes')]",
                "subnetId": "[resourceId(union(variables('defaultResourceProperties').subnet, parameters('subnet')).subscriptionId, union(variables('defaultResourceProperties').subnet, parameters('subnet')).resourceGroupName, 'Microsoft.Network/virtualNetworks/subnets', parameters('subnet').virtualNetworkName, parameters('subnet').name)]",
                "timeZoneId": "[parameters('timeZone')]"
            },
            "sku": {
                "name": "[parameters('skuName')]"
            },
            "tags": "[parameters('tags')]",
            "type": "Microsoft.Sql/managedInstances"
        },
        {
            "apiVersion": "[variables('apiVersions').diagnosticSettings]",
            "condition": "[or(variables('isAuditEnabled'), variables('isAuditLogAnalyticsWorkspaceNameNotEmpty'))]",
            "dependsOn": [
                "[variables('resourceIds').managedInstance]"
            ],
            "name": "[format('{0}/Microsoft.Insights/audit', parameters('name'))]",
            "properties": {
                "copy": [
                    {
                        "count": "[length(variables('audit').logNames)]",
                        "input": {
                            "category": "[variables('audit').logNames[copyIndex('logs')]]",
                            "enabled": "[variables('isAuditEnabled')]",
                            "retentionPolicy": {
                                "days": "[variables('audit').retentionPolicy.days]",
                                "enabled": "[variables('audit').retentionPolicy.isEnabled]"
                            }
                        },
                        "name": "logs"
                    }
                ],
                "workspaceId": "[variables('resourceIds').auditLogAnalyticsWorkspace]"
            },
            "type": "Microsoft.Sql/managedInstances/providers/diagnosticSettings"
        }
    ]
}
